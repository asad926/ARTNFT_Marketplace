{"version":3,"sources":["nfts/artAuction.js","creatForm/creatSingle.jsx","nfts/artAuction1155.js","creatForm/creatMultiple.jsx","creatForm/mainPage.jsx","components/NavBar.jsx","components/ItemCard.jsx","Icons/art_logo.png","Icons/ART-icon.png","creatForm/icon/site_symb.png","nfts/connectWallet.js","Icons/search-icon.svg","Icons/avatardefault.png","Icons/TRM-banner.jpeg","Icons/bsc-logo.svg","components/UpperBody.jsx","Icons/binance-logo.svg","Icons/verified.svg","components/ItemCardDetail.jsx","components/My_Collection.jsx","components/MarketPage.jsx","Home.jsx","Icons/twitter-icon.svg","Icons/lin-icon.svg","Icons/discord.svg","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["artAuction","dogToken","web3","address","nft721","auctionContract","auction","nft1155","accounts","account","getWallet","Promise","resolve","reject","a","console","log","window","ethereum","Web3","enable","Auction","loadContracts","getWeb3","eth","getAccounts","Contract","ArtAuction","abi","contractAddress","DOGToken","nftBid","id","price","parseFloat","includes","pr","methods","approve","utils","toWei","send","from","transaction","status","bidOnAuction","value","createAuction","nftId","type","deadline","auctionId","getCount","call","count","cancelAuction","claimAuction","finalizeAuction","this","ipfs","create","require","host","port","protocol","uploadFile","creatSingle","state","onSale","selectedFile","previewText","properties","key","loading","modalIsOpen","loadingText","element","React","createRef","componentDidMount","props","data","isApprovedForAll","erc721","setApprovalForAll","totalSupply","nftOnSale","e","setState","target","checked","handleInput","preventDefault","inputFile","files","toBase64","base64","file","reader","FileReader","readAsDataURL","onload","result","onerror","error","addNewInput","document","getElementById","getElementsByTagName","p1","length","p2","concat","jsonProperties","i","upload","openModal","jsonProp","formD","forms","royalty","elements","FormData","append","warn","addedToIpfs","v1CID","axios","method","url","headers","timeout","then","response","nftImage","nftURI","server","nftContract","catch","saveNftDB","farmData","nftTransaction","nftName","nftDescription","auctionData","nftPrice","tokenType","totaltime","Date","getTime","returnValues","tokenId","toLowerCase","parseInt","auction_id","onAuction","time","name","description","image","metadata","owners","role","to","history","action","date","now","info","nftID","mintTransaction","transactionHash","JSON","parse","stringify","closeModal","customStyles","content","top","left","right","bottom","marginRight","transform","width","supply","mint","events","Transfer","add","progress","prog","added","cid","toV1","toBaseEncodedString","className","onClick","style","cursor","userSelect","encType","border","borderRadius","htmlFor","backgroundColor","color","fontWeight","onChange","accept","display","borderBottom","height","float","borderTop","borderLeft","borderRight","src","SiteSymb","alt","marginTop","fontSize","placeholder","position","map","index","borderColor","marginLeft","order","maxWidth","isOpen","onRequestClose","contentLabel","ariaHideApp","class","data-dismiss","css","size","speedMultiplier","Component","creatMultiple","erc1155","totalNftTypes","nftSupply","nftRoyalty","_id","tokenSupply","tokenRoyalty","_to","TransferSingle","mainPage","stateHandler","bind","formComponent","loadSingle","loadMultiple","self","isMetaMaskInstalled","connectToMetaMask","on","Boolean","isMetaMask","n721","Nft721","n1155","Nft1155","lineHeight","transition","padding","boxShadow","icon","b_icon","navBar","metaMask","user","loadDB","link","get","res","connectWallet","acc","substring","Logo01","search_icon","pic","Default_avatar","upperBody","marginBottom","TRMbanner","ItemCard","nftData","useState","nftBtn","setNftBtn","balance","setBalance","dogBalance","setDogBalance","bidModalIsOpen","setBidModalIsOpen","setModalIsOpen","auctionTimer","setAuctionTimer","isBid","setIsBid","latestBid","setLatestBid","errors","setErrors","useEffect","checkNftStatus","getUserBalance","setInterval","auctionTime","click","contract","AuctionContract","getCurrentBid","bid","openBidModal","checkBidStatus","bidAuction","amount","post","location","reload","currentBid","toFixed","bids","Location","Auction1155","owner","find","b","currentTime","Token","balanceOf","dog","getBalance","Error","seconds","minutes","Math","floor","hours","days","closeBidModal","textDecorationLine","verified","margin","justifyContent","alignItems","BinanceLogo","disabled","align","selected","MarketPage","etherem","data-toggle","href","el","paddingLeft","paddingRight","flex","Home","itemCardDetail","nft","bidType","clickBid","Contract1155","match","params","newOwner","toISOString","split","validateBid","data-target","Object","keys","onAfterOpen","afterOpenModal","my_Collection","bidData","myCollection","my_bids","tab_myCollection","tab_my_bids","modalState","localStorage","setItem","profileImage","userNfts","userData","nfts","all","spread","res1","res2","res3","forEach","push","Handle_Show","Active_myCollection","Active_my_bids","minHeight","aria-label","textAlign","for","bio","Footer","flexDirection","art_logo","Twitter","LinkIn","Discord","App","path","component","exact","ItemCardDetail","MainPage","MyCollections","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.43958040.chunk.js","sourcesContent":["import getWeb3 from \"./connectWallet\";\nimport ArtAuction from \"../contracts/ArtAuction.json\"\nimport DOGToken from \"../contracts/DOGToken.json\"\nlet artAuction, dogToken,web3,address ;\nclass Auction {\n\n   constructor(){\n      this.loadContracts();\n  }\n\n  loadContracts=async()=>{\n    web3 = await getWeb3();\n    let account = await web3.eth.getAccounts();\n    address = account[0];\n    artAuction = new web3.eth.Contract(\n      ArtAuction.abi, ArtAuction.contractAddress);\n    dogToken = new web3.eth.Contract(\n      DOGToken.abi, DOGToken.contractAddress);\n  }\n\n    nftBid = async(id,price) =>{\n    console.log(\"NFT ID: \" + id+\":Price:\"+parseFloat(price)+price.includes('BNB'))\n    let transaction;\n    try{\n      \n      let pr = parseFloat(price)\n      if(price.includes('DOG')){\n      transaction = await dogToken.methods.approve(ArtAuction.contractAddress,web3.utils.toWei(\"\"+pr,\"ether\")).send({from:address});\n      if(transaction.status)\n      transaction = await artAuction.methods.bidOnAuction(id,web3.utils.toWei(\"\"+pr,\"ether\")).send({from:address})\n      }else{\n      transaction = await artAuction.methods.bidOnAuction(id,0).send({from:address,value:web3.utils.toWei(\"\"+pr,\"ether\")})\n      }\n       console.log(\"Bid Transaction: \"+transaction)\n       return transaction.status;\n    }catch(e){console.log(e)} \n     }\n\n     createAuction=async(nftId,price,type,deadline)=>{\n       try{\n      let transaction = await artAuction.methods.createAuction(nftId,deadline,\"\"+price,type).send({from:address})\n      console.log(\"Auction Transaction: \" + transaction)\n      return transaction.status;\n       }catch(e){console.log(e); return false} \n    }\n    auctionId=async()=>{\n      let count = await artAuction.methods.getCount().call();\n      console.log(\"Auction Id: \" + count);\n      return count;\n    }\n\n    cancelAuction=async(auctionId)=>{\n      try{\n      let transaction = await artAuction.methods.cancelAuction(auctionId).send({from:address})\n      console.log(\"Auction Transaction: \" + transaction)\n      return transaction.status;\n    }catch(e){console.log(e); return false}\n    }\n    claimAuction=async(auctionId)=>{\n      try{\n      let transaction = await artAuction.methods.finalizeAuction(auctionId).send({from:address})\n      console.log(\"Auction Transaction: \" + transaction)\n      return transaction.status;\n    }catch(e){console.log(e); return false}\n    }\n    }\nexport default Auction;","import React, { Component } from 'react';\r\nimport SiteSymb from './icon/site_symb.png';\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport \"./creatSingle.css\";\r\nimport axios from 'axios';\r\nimport erc721 from \"../contracts/ArtNft721.json\"\r\nimport Modal from \"react-modal\";\r\nimport Auction from \"../nfts/artAuction\"\r\nimport ClipLoader from \"react-spinners/ClockLoader\";\r\n\r\n\r\nconst { create } = require('ipfs-http-client')\r\nconst ipfs = create({\r\n    host: \"ipfs.infura.io\",\r\n    port: \"5001\",\r\n    protocol: \"https\",\r\n})\r\nlet web3;\r\nlet nft721;\r\nlet auctionContract, auction;\r\nlet uploadFile = null;\r\nconst override = \"display: block;margin: 0 auto;border-color: #6610f2;\";\r\nclass creatSingle extends Component {\r\n    state = {\r\n        onSale: false,\r\n        selectedFile: null,\r\n        previewText: \"Prevlew of your new collectible\",\r\n        properties: [{ key: \"\", value: \"\" }],\r\n        loading: true,\r\n        modalIsOpen: false,\r\n        loadingText:\"\"\r\n    }\r\n    element = React.createRef();\r\n\r\n    componentDidMount=async () =>{\r\n        nft721 = this.props.data.nft721;\r\n        auctionContract = this.props.data.auctionContract;\r\n        web3 = this.props.data.web3;\r\n        let account = await web3.eth.getAccounts();\r\n        auction = new Auction();\r\n        let approved = await nft721.methods.isApprovedForAll(account[0],erc721.contractAddress).call();\r\n        if(!approved) {\r\n           await nft721.methods.setApprovalForAll(erc721.contractAddress,true).send({from: account[0]});\r\n        }\r\n    }\r\n\r\n    createAuction = async () => {\r\n        let supply = await nft721.methods.totalSupply().call();\r\n        supply++;\r\n    }\r\n\r\n    nftOnSale = (e) => {\r\n        this.setState({ onSale: e.target.checked });\r\n    }\r\n    handleInput = async (e) => {\r\n        e.preventDefault()\r\n        const inputFile = e?.target?.files[0];\r\n        uploadFile = inputFile;\r\n        if (inputFile) {\r\n            const base64 = await this.toBase64(inputFile)\r\n            this.setState({ selectedFile: base64, previewText: \"\" })\r\n        }\r\n\r\n        // document.getElementById('inputfile').click()\r\n    }\r\n    toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    addNewInput = () => {\r\n        var properties = document.getElementById('propertyInputs').getElementsByTagName(\"input\");\r\n        let p1 = properties[properties.length - 2].value;\r\n        let p2 = properties[properties.length - 1].value;\r\n        if (p1 !== \"\" && p2 !== \"\") {\r\n            this.setState({\r\n                properties: this.state.properties.concat([{ key: \"\", value: \"\" }])\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async nftContract(nftURI, nftImage, royalty, formD) {\r\n        this.setState({loadingText:\"Minting new NFT token...\"})\r\n        let account = await web3.eth.getAccounts();\r\n        let supply = await nft721.methods.totalSupply().call();\r\n        supply++;\r\n        const nftTransaction = await nft721.methods.mint(parseInt(supply), [[account[0], parseInt(royalty) * 100]], nftURI+parseInt(supply)).send({ from: account[0] });\r\n        this.saveNftDB(formD, nftImage, nftURI+supply, nftTransaction.events.Transfer)\r\n    }\r\n\r\n    async addedToIpfs() {\r\n        const added = await ipfs.add(uploadFile, {\r\n            progress: (prog) => {console.log(`received: ${prog}`); this.setState({loadingText:\"Uploading to IPFS.(\"+prog/1024+\"KB)\"})},\r\n        });\r\n        let v1CID = added.cid.toV1()\r\n        return v1CID.toBaseEncodedString('base32');\r\n    }\r\n\r\n    jsonProperties = () => {\r\n        var properties = document.getElementById('propertyInputs').getElementsByTagName(\"input\");\r\n        let data = '[';\r\n        for (let i = 0; i < properties.length; i = i + 2) {\r\n            if (properties[i].value) {\r\n                let key = properties[i].value;\r\n                let value = properties[i + 1].value;\r\n                data = data + '{\"' + key + '\":\"' + value + '\"}'\r\n                if (properties[i + 2].value)\r\n                    data = data + ',';\r\n            }\r\n        }\r\n        data = data + ']';\r\n\r\n        return data;\r\n    }\r\n\r\n    upload = async () => {\r\n        this.setState({loadingText:\"Uploading NFT Image to Server...\"})\r\n        this.openModal();\r\n        \r\n        let jsonProp = this.jsonProperties();\r\n\r\n        let formD = document.forms[\"nftDetails\"];\r\n        let royalty = formD.elements[\"nftRoyalty\"].value;\r\n        let data = new FormData(formD);\r\n        data.append(\"properties\", jsonProp)\r\n        console.warn(uploadFile);\r\n        let v1CID = await this.addedToIpfs();\r\n\r\n        data.append(\"ipfsHash\", v1CID);\r\n        let link = \"http://localhost:9000/upload\";\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data: data,\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n                ,\r\n                timeout: 3000,\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        let nftImage = response.data.nftImage;\r\n                        let nftURI = \"http://\"+response.data.server+\"/nfts/\";\r\n                        this.nftContract(nftURI, nftImage, royalty, formD);\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    saveNftDB = async (farmData, nftImage, nftURI, nftTransaction) => {\r\n        let jsonProp = this.jsonProperties();\r\n        let nftName = farmData.elements[\"nftName\"].value;\r\n        let nftDescription = farmData.elements[\"nftDescription\"].value;\r\n        let nftPrice;\r\n        let tokenType;\r\n        let auctionData = {};\r\n        let price = \"\";\r\n        if (this.state.onSale) {\r\n            nftPrice = farmData.elements[\"nftPrice\"].value;\r\n            tokenType = farmData.elements[\"tokenType\"].value;\r\n            price = nftPrice + tokenType;\r\n            try {\r\n                let deadline = farmData.elements[\"deadline\"].value;\r\n                let totaltime = (new Date().getTime() / 1000) + deadline * 86400;\r\n                let nftId = nftTransaction.returnValues.tokenId;\r\n                let auctionId = await auctionContract.methods.getCount().call();\r\n                this.setState({loadingText:\"Placing this NFT on Auction...\"})\r\n                await auction.createAuction(nftId, nftPrice * 1e18, tokenType.toLowerCase(), parseInt(totaltime));\r\n                auctionData = {\r\n                    auction_id: auctionId,\r\n                    onAuction: true,\r\n                    time: parseInt(totaltime),\r\n                }\r\n            } catch (e) { console.log(e) }\r\n        } else {\r\n            price = \"0\";\r\n        }\r\n\r\n\r\n        this.setState({loadingText:\"Uploading NFT data to Server...\"})\r\n\r\n        let data = {\r\n            name: nftName,\r\n            price: price,\r\n            type: \"Single Item\",\r\n            description: nftDescription,\r\n            image: nftImage,\r\n            metadata: nftURI,\r\n            owners: [\r\n                {\r\n                    role: 'CREATOR',\r\n                    name: nftTransaction.returnValues.to,\r\n                },\r\n                {\r\n                    role: 'OWNER',\r\n                    name: nftTransaction.returnValues.to,\r\n                },\r\n            ],\r\n            history: [\r\n                {\r\n                    action: 'The NFT was minted',\r\n                    date: Date.now(),\r\n                },\r\n            ],\r\n            info: [\r\n                {\r\n                    nftID: nftTransaction.returnValues.tokenId,\r\n                    mintTransaction: nftTransaction.transactionHash,\r\n                    contractAddress: nftTransaction.address\r\n                },\r\n            ],\r\n            properties: JSON.parse(jsonProp),\r\n            auction: auctionData\r\n        }\r\n\r\n        let link = \"http://localhost:9000/nfts/save\";\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data: data,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n                ,\r\n                timeout: 5000,\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        console.log(JSON.stringify(response.data))\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.closeModal();\r\n    }\r\n\r\n    customStyles = {\r\n        content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"30%\"\r\n        },\r\n    };\r\n\r\n    openModal = () => {\r\n        this.setState({ modalIsOpen: true });\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ modalIsOpen: false });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"my-4\" onClick={this.props.action}>\r\n                    <h5 className=\"ml-4\" style={{}}>\r\n                        <span style={{ cursor: \"pointer\", userSelect: \"none\" }}>\r\n                            <i><FaArrowLeft /></i>\r\n                            Manage collectible type\r\n                        </span>\r\n                    </h5>\r\n                </div>\r\n                <h3 className=\"ml-5\"><span> Create Single Collectible </span></h3>\r\n                <div className=\"creatSingle_boxed d-flex flex-wrap pt-4\">\r\n\r\n                    <div className=\"pb-5\">\r\n                        <form className=\"form\" id=\"nftDetails\" encType=\"multipart/form-data\">\r\n                            <div className=\"mb-4\">\r\n                                <h4> Upload file: </h4>\r\n                                <div className=\"text-center p-4 mt-4 mb-4\" style={{ border: \"2px dashed rgb(221, 221, 221)\", borderRadius: \"40px\" }}>\r\n                                    <label htmlFor=\"nft_file\" className=\"my-3\">\r\n                                        <span className=\"btn\" style={{ borderRadius: \"50px\", backgroundColor: \"#e6b000\", border: \"1px solid #e6b000\", color: \"white\", fontWeight: \"600\" }}> Choose file </span>\r\n                                    </label>\r\n                                    <div className=\"text-muted\"> PNG, GIF, WEBP, MP4 or MP3. Max 30mb </div>\r\n                                    <input type=\"file\" onChange={this.handleInput} id=\"nft_file\" name=\"nft_file\" accept=\"image/png,image/jpeg,image/gif,image/webp,image/avif,video/mp4,video/x-m4v,video/quicktime,video/*\" style={{ display: 'none' }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                        <h4> Put on sale </h4>\r\n                                        <div className=\"text-muted\"> You’ll receive bids on this item </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                        <label className=\"switch\">\r\n                                            <input type=\"checkbox\" onChange={this.nftOnSale} />\r\n                                            <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.onSale ?\r\n                                <div className=\"my-4\">\r\n                                    <h4>Instant sale price</h4>\r\n                                    <p className=\"text-muted\"> Enter the price for which the item will be instantly sold </p>\r\n                                    <div className=\"mb-3 d-flex\">\r\n                                        <input type=\"text\" id=\"nftPrice\" name=\"nftPrice\" className=\"creatSingle_switch_formControl\" style={{ width: \"100%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\" }} />\r\n                                        <select className=\"ml-3 creatSingle_switch_formControl\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\" }} name=\"tokenType\" id=\"tokenType\">\r\n                                            <option style={{ height: \"2em\" }} value=\"BNB\">BNB</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"DOG\"> DOG </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"mb-3 d-flex\">\r\n                                        <label className=\"text-muted\" style={{ width: \"100%\" }}>Sale Deadline</label>\r\n                                        <select className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", float: \"right\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"deadline\" id=\"deadline\">\r\n                                            <option style={{ height: \"2em\" }} value=\"1\">1 Day</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"3\"> 3 Days </option>\r\n                                            <option style={{ height: \"2em\" }} value=\"5\">5 Days</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"7\"> 7 Days</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"10\">10 Days</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                : <> </>}\r\n                            <div className=\"my-4\">\r\n                                <h4> Choose collection </h4>\r\n                                <div className=\"mt-3 d-flex\">\r\n                                    <div className=\"align-items-center text-center bg-light  align-items-center justify-content-center\" style={{ width: \"100px\", height: \"100px\", borderRadius: \"20px\", border: \" 1px solid hsla(0,0%,39.2%,.2)\", cursor: \"pointer\", }}>\r\n                                        <img src={SiteSymb} alt=\"not found!\" style={{ width: \"50px\", height: \"50px\", marginTop: \"10px\" }} />\r\n                                        <span id=\"nftCollection\" name=\"nftCollection\" style={{ fontWeight: \"700\", fontSize: \"80%\" }}> JGNNFT </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <h4> Name </h4>\r\n                                <div className=\"mt-3\">\r\n                                    <input id=\"nftName\" name=\"nftName\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. “redeemable Cards with logo”\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\" >\r\n                                <h4> Description <span style={{ fontSize: \"80%\", fontWeight: \"400\", color: \"gray\" }}> (Optional) </span></h4>\r\n                                <div className=\"mt-3\">\r\n                                    <input id=\"nftDescription\" name=\"nftDescription\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. “After purchasing you’ll able to get real cards”\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <div style={{ width: \"100%\" }}>\r\n                                    <div className=\"my-4\">\r\n                                        <h4> Royalties </h4>\r\n                                        <div className=\"mt-3\" style={{ position: \"relativ\" }}>\r\n                                            <input id=\"nftRoyalty\" name=\"nftRoyalty\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. 10%\" />\r\n                                            <span style={{ color: \"gray\", fontSize: \"80%\", fontWeight: \"400\", }}> Suggested: 10%, 20%, 30% </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <h4>  Properties  <span style={{ fontSize: \"80%\", fontWeight: \"400\", color: \"gray\" }}> (Optional) </span></h4>\r\n                                <div className=\"mt-3\">\r\n\r\n                                </div>\r\n                                <div className=\"mt-3\" id=\"propertyInputs\">\r\n                                    {this.state.properties.map((properties, index) => (\r\n                                        <div className=\"d-flex mb-2\">\r\n                                            <input id={`key${index + 1}`} name={`key${index + 1}`} style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\", marginRight: \"15px\" }} type=\"text\" placeholder=\"e.g. Size\" onChange={this.addNewInput} />\r\n                                            <input id={`value${index + 1}`} name={`value${index + 1}`} style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. M\" onChange={this.addNewInput} />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                        <div className=\"my-5\">\r\n                            <button className=\"btn px-4\" style={{ backgroundColor: \"#e6b000\", borderColor: \"#e6b000\", color: \"#fff\", fontWeight: \"600\" }} onClick={this.upload}> Create Now </button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mb-5\" style={{ marginLeft: \"50px\", order: \"2\" }}>\r\n                        <h4 className=\"mb-4\"> Preview </h4>\r\n                        <div className=\"py-4 d-flex justify-content-center align-items-center\" style={{ border: \"1px solid rgb(221, 221, 221)\", borderRadius: \"40px\", width: \"300px\", height: \"400px\", maxWidth: \"100%\" }}>\r\n                            <div>\r\n                                <div className=\"text-muted\"> {this.state.previewText} </div>\r\n\r\n                                <img\r\n                                    src={this.state.selectedFile}\r\n                                    alt=\"\"\r\n                                    style={{ width: \"100%\" }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onRequestClose={this.closeModal}\r\n                    style={this.customStyles}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                >\r\n                    <div class=\"content\">\r\n                        <div>\r\n                            <button\r\n                                onClick={this.closeModal}\r\n                                type=\"button\"\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"my-4\">\r\n                            <h4>Alerts</h4>\r\n                            <p className=\"text-muted\"> {this.state.loadingText}</p>\r\n                            <div className=\"mb-3 d-flex\">\r\n                                <div className=\"sweet-loading\" style={{marginLeft:\"40%\",marginRight:\"40%\"}}>\r\n                                    <ClipLoader css={override} size={60} color={\"#123abc\"} loading={this.state.modalIsOpen} speedMultiplier={1.5} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default creatSingle;","import getWeb3 from \"./connectWallet\";\nimport ArtAuction from \"../contracts/ArtNFTAuction.json\"\nimport DOGToken from \"../contracts/DOGToken.json\"\nlet artAuction, dogToken,web3,address ;\nclass Auction {\n\n   constructor(){\n      this.loadContracts();\n  }\n\n  loadContracts=async()=>{\n    web3 = await getWeb3();\n    let account = await web3.eth.getAccounts();\n    address = account[0];\n    artAuction = new web3.eth.Contract(\n      ArtAuction.abi, ArtAuction.contractAddress);\n    dogToken = new web3.eth.Contract(\n      DOGToken.abi, DOGToken.contractAddress);\n  }\n\n    nftBid = async(id,price) =>{\n    console.log(\"NFT ID: \" + id+\":Price:\"+parseFloat(price)+price.includes('BNB'))\n    let transaction;\n    try{\n      \n      let pr = parseFloat(price)\n      if(price.includes('DOG')){\n      transaction = await dogToken.methods.approve(ArtAuction.contractAddress,web3.utils.toWei(\"\"+pr,\"ether\")).send({from:address});\n      if(transaction.status)\n      transaction = await artAuction.methods.bidOnAuction(id,web3.utils.toWei(\"\"+pr,\"ether\")).send({from:address})\n      }else{\n      transaction = await artAuction.methods.bidOnAuction(id,0).send({from:address,value:web3.utils.toWei(\"\"+pr,\"ether\")})\n      }\n       console.log(\"Bid Transaction: \"+transaction)\n       return transaction.status;\n    }catch(e){console.log(e)} \n     }\n\n     createAuction=async(nftId,price,type,deadline)=>{\n       try{\n      let transaction = await artAuction.methods.createAuction(nftId,deadline,\"\"+price,type).send({from:address})\n      console.log(\"Auction Transaction: \" + transaction)\n      return transaction.status;\n       }catch(e){console.log(e); return false} \n    }\n    auctionId=async()=>{\n      let count = await artAuction.methods.getCount().call();\n      console.log(\"Auction Id: \" + count);\n      return count;\n    }\n\n    cancelAuction=async(auctionId)=>{\n      try{\n      let transaction = await artAuction.methods.cancelAuction(auctionId).send({from:address})\n      console.log(\"Auction Transaction: \" + transaction)\n      return transaction.status;\n    }catch(e){console.log(e); return false}\n    }\n    claimAuction=async(auctionId)=>{\n      try{\n      let transaction = await artAuction.methods.finalizeAuction(auctionId).send({from:address})\n      console.log(\"Auction Transaction: \" + transaction)\n      return transaction.status;\n    }catch(e){console.log(e); return false}\n    }\n    }\nexport default Auction;","import React, { Component } from 'react';\r\nimport SiteSymb from './icon/site_symb.png';\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\nimport Auction from \"../nfts/artAuction1155\"\r\nimport erc1155 from \"../contracts/ArtNft1155.json\"\r\nimport Modal from \"react-modal\";\r\nimport ClipLoader from \"react-spinners/ClockLoader\";\r\n\r\nconst { create } = require('ipfs-http-client')\r\nconst ipfs = create({\r\n    host: \"ipfs.infura.io\",\r\n    port: \"5001\",\r\n    protocol: \"https\",\r\n})\r\nlet web3;\r\nlet nft1155;\r\nlet uploadFile = null\r\nlet auctionContract, auction;\r\nconst override = \"display: block;margin: 0 auto;border-color: #6610f2;\";\r\nclass creatMultiple extends Component {\r\n    state = {\r\n        onSale: false,\r\n        selectedFile: null,\r\n        previewText: \"Prevlew of your new collectible\",\r\n        properties: [{ key: \"\", value: \"\" }],\r\n        loading: true,\r\n        modalIsOpen: false,\r\n        loadingText: \"\"\r\n    }\r\n    element = React.createRef();\r\n\r\n    componentDidMount= async () => {\r\n        nft1155 = this.props.data.nft1155;\r\n        auctionContract = this.props.data.auctionContract;\r\n        web3 = this.props.data.web3;\r\n        let account = await web3.eth.getAccounts();\r\n        auction = new Auction();\r\n        let approved = await nft1155.methods.isApprovedForAll(account[0],erc1155.contractAddress).call();\r\n        if(!approved) {\r\n           await nft1155.methods.setApprovalForAll(erc1155.contractAddress,true).send({from: account[0]});\r\n        }\r\n    }\r\n\r\n    createAuction = async () => {\r\n        let supply = await nft1155.methods.totalNftTypes().call();\r\n        supply++;\r\n    }\r\n\r\n    nftOnSale = (e) => {\r\n        this.setState({ onSale: e.target.checked });\r\n    }\r\n    handleInput = async (e) => {\r\n        e.preventDefault()\r\n        const inputFile = e?.target?.files[0];\r\n        uploadFile = inputFile;\r\n        if (inputFile) {\r\n            const base64 = await this.toBase64(inputFile)\r\n            this.setState({ selectedFile: base64, previewText: \"\" })\r\n        }\r\n\r\n        // document.getElementById('inputfile').click()\r\n    }\r\n    toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    addNewInput = () => {\r\n        var properties = document.getElementById('propertyInputs').getElementsByTagName(\"input\");\r\n        let p1 = properties[properties.length - 2].value;\r\n        let p2 = properties[properties.length - 1].value;\r\n        if (p1 !== \"\" && p2 !== \"\") {\r\n            this.setState({\r\n                properties: this.state.properties.concat([{ key: \"\", value: \"\" }])\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async nftContract(nftURI, nftImage, royalty, formD) {\r\n        this.setState({ loadingText: \"Minting new NFT token...\" })\r\n        let account = await web3.eth.getAccounts();\r\n        let supply = await nft1155.methods.totalNftTypes().call();\r\n        let tokenSupply = formD.elements[\"nftSupply\"].value;\r\n        supply++;\r\n        const nftTransaction = await nft1155.methods.mint(parseInt(supply), [[account[0], parseInt(royalty) * 100]], tokenSupply, nftURI + parseInt(supply)).send({ from: account[0] });\r\n        console.log(\"saveNftDB: \"+ JSON.stringify(nftTransaction))\r\n        this.saveNftDB(formD, nftImage, nftURI + supply, nftTransaction.events.TransferSingle)\r\n    }\r\n\r\n    async addedToIpfs() {\r\n        const added = await ipfs.add(uploadFile, {\r\n            progress: (prog) => { console.log(`received: ${prog}`); this.setState({ loadingText: \"Uploading to IPFS.(\" + prog / 1024 + \"KB)\" }) },\r\n        });\r\n        let v1CID = added.cid.toV1()\r\n        return v1CID.toBaseEncodedString('base32');\r\n    }\r\n\r\n    jsonProperties = () => {\r\n        var properties = document.getElementById('propertyInputs').getElementsByTagName(\"input\");\r\n        let data = '[';\r\n        for (let i = 0; i < properties.length; i = i + 2) {\r\n            if (properties[i].value) {\r\n                let key = properties[i].value;\r\n                let value = properties[i + 1].value;\r\n                data = data + '{\"' + key + '\":\"' + value + '\"}'\r\n                if (properties[i + 2].value)\r\n                    data = data + ',';\r\n            }\r\n        }\r\n        data = data + ']';\r\n\r\n        return data;\r\n    }\r\n\r\n    upload = async () => {\r\n        this.setState({ loadingText: \"Uploading NFT Image to Server...\" })\r\n        this.openModal();\r\n\r\n        let jsonProp = this.jsonProperties();\r\n\r\n        let formD = document.forms[\"nftDetails\"];\r\n        let royalty = formD.elements[\"nftRoyalty\"].value;\r\n        let data = new FormData(formD);\r\n        data.append(\"properties\", jsonProp)\r\n        console.warn(uploadFile);\r\n        let v1CID = await this.addedToIpfs();\r\n\r\n        data.append(\"ipfsHash\", v1CID);\r\n        let link = \"/upload\";\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data: data,\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n                ,\r\n                timeout: 3000,\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        let nftImage = response.data.nftImage;\r\n                        let nftURI = \"http://\" + response.data.server + \"/nfts/\";\r\n                        this.nftContract(nftURI, nftImage, royalty, formD);\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    saveNftDB = async (farmData, nftImage, nftURI, nftTransaction) => {\r\n        console.log(\"saveNftDB: \"+ JSON.stringify(nftTransaction))\r\n        let jsonProp = this.jsonProperties();\r\n        let nftName = farmData.elements[\"nftName\"].value;\r\n        let nftDescription = farmData.elements[\"nftDescription\"].value;\r\n        let nftSupply = farmData.elements[\"nftSupply\"].value;\r\n        let nftRoyalty = farmData.elements[\"nftRoyalty\"].value;\r\n        let nftPrice;\r\n        let tokenType;\r\n        let auctionData = {};\r\n        let price = \"\";\r\n        if (this.state.onSale) {\r\n            nftPrice = farmData.elements[\"nftPrice\"].value;\r\n            tokenType = farmData.elements[\"tokenType\"].value;\r\n            price = nftPrice + tokenType;\r\n            try {\r\n                let deadline = farmData.elements[\"deadline\"].value;\r\n                let totaltime = (new Date().getTime() / 1000) + deadline * 86400;\r\n                let nftId = nftTransaction.returnValues._id;\r\n                let auctionId = await auctionContract.methods.getCount().call();\r\n                this.setState({ loadingText: \"Placing this NFT on Auction...\" })\r\n                await auction.createAuction(nftId, nftPrice * 1e18, tokenType.toLowerCase(), parseInt(totaltime));\r\n                auctionData = {\r\n                    auction_id: auctionId,\r\n                    onAuction: true,\r\n                    time: parseInt(totaltime),\r\n                }\r\n            } catch (e) { console.log(e) }\r\n        } else {\r\n            price = \"0\";\r\n        }\r\n\r\n\r\n        this.setState({ loadingText: \"Uploading NFT data to Server...\" })\r\n\r\n        let data = {\r\n            name: nftName,\r\n            price: price,\r\n            type: \"Multiple Items\",\r\n            tokenSupply: nftSupply,\r\n            tokenRoyalty: nftRoyalty,\r\n            description: nftDescription,\r\n            image: nftImage,\r\n            metadata: nftURI,\r\n            owners: [\r\n                {\r\n                    role: 'CREATOR',\r\n                    name: nftTransaction.returnValues._to,\r\n                },\r\n                {\r\n                    role: 'OWNER',\r\n                    name: nftTransaction.returnValues._to,\r\n                },\r\n            ],\r\n            history: [\r\n                {\r\n                    action: 'The NFT was minted',\r\n                    date: Date.now(),\r\n                },\r\n            ],\r\n            info: [\r\n                {\r\n                    nftID: nftTransaction.returnValues._id,\r\n                    mintTransaction: nftTransaction.transactionHash,\r\n                    contractAddress: nftTransaction.address\r\n                },\r\n            ],\r\n            properties: JSON.parse(jsonProp),\r\n            auction: auctionData\r\n        }\r\n\r\n        let link = \"/nfts/save\";\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data: data,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n                ,\r\n                timeout: 5000,\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        console.log(JSON.stringify(response.data))\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.closeModal();\r\n    }\r\n\r\n    customStyles = {\r\n        content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"30%\"\r\n        },\r\n    };\r\n\r\n    openModal = () => {\r\n        this.setState({ modalIsOpen: true });\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ modalIsOpen: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"my-4\" onClick={this.props.action}>\r\n                    <h5 className=\"ml-4\" style={{}}>\r\n                        <span style={{ cursor: \"pointer\", userSelect: \"none\" }}>\r\n                            <FaArrowLeft />\r\n                            Manage collectible type\r\n                        </span>\r\n                    </h5>\r\n                </div>\r\n                <h3 className=\"ml-5\"><span> Create Multiple Collectible </span></h3>\r\n                <div className=\"creatSingle_boxed d-flex flex-wrap pt-4\">\r\n\r\n                    <div className=\"pb-5\">\r\n                        <form className=\"form\" id=\"nftDetails\" encType=\"multipart/form-data\">\r\n                            <div className=\"mb-4\">\r\n                                <h4> Upload file: </h4>\r\n                                <div className=\"text-center p-4 mt-4 mb-4\" style={{ border: \"2px dashed rgb(221, 221, 221)\", borderRadius: \"40px\" }}>\r\n                                    <label htmlFor=\"nft_file\" className=\"my-3\">\r\n                                        <span className=\"btn\" style={{ borderRadius: \"50px\", backgroundColor: \"#e6b000\", border: \"1px solid #e6b000\", color: \"white\", fontWeight: \"600\" }}> Choose file </span>\r\n                                    </label>\r\n                                    <div className=\"text-muted\"> PNG, GIF, WEBP, MP4 or MP3. Max 30mb </div>\r\n                                    <input type=\"file\" onChange={this.handleInput} id=\"nft_file\" name=\"nft_file\" accept=\"image/png,image/jpeg,image/gif,image/webp,image/avif,video/mp4,video/x-m4v,video/quicktime,video/*\" style={{ display: 'none' }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                        <h4> Put on sale </h4>\r\n                                        <div className=\"text-muted\"> You’ll receive bids on this item </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                        <label className=\"switch\">\r\n                                            <input type=\"checkbox\" onChange={this.nftOnSale} />\r\n                                            <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.onSale ?\r\n                                <div className=\"my-4\">\r\n                                    <h4>Instant sale price</h4>\r\n                                    <p className=\"text-muted\"> Enter the price for which the item will be instantly sold </p>\r\n                                    <div className=\"mb-3 d-flex\">\r\n                                        <input type=\"text\" id=\"nftPrice\" name=\"nftPrice\" className=\"creatSingle_switch_formControl\" style={{ width: \"100%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\" }} />\r\n                                        <select className=\"ml-3 creatSingle_switch_formControl\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\" }} name=\"tokenType\" id=\"tokenType\">\r\n                                            <option style={{ height: \"2em\" }} value=\"BNB\">BNB</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"DOG\"> DOG </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"mb-3 d-flex\">\r\n                                        <label className=\"text-muted\" style={{ width: \"100%\" }}>Sale Deadline</label>\r\n                                        <select className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", float: \"right\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"deadline\" id=\"deadline\">\r\n                                            <option style={{ height: \"2em\" }} value=\"1\">1 Day</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"3\"> 3 Days </option>\r\n                                            <option style={{ height: \"2em\" }} value=\"5\">5 Days</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"7\"> 7 Days</option>\r\n                                            <option style={{ height: \"2em\" }} value=\"10\">10 Days</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                : <> </>}\r\n                            <div className=\"my-4\">\r\n                                <h4> Choose collection </h4>\r\n                                <div className=\"mt-3 d-flex\">\r\n                                    <div className=\"align-items-center text-center bg-light  align-items-center justify-content-center\" style={{ width: \"100px\", height: \"100px\", borderRadius: \"20px\", border: \" 1px solid hsla(0,0%,39.2%,.2)\", cursor: \"pointer\", }}>\r\n                                        <img src={SiteSymb} alt=\"not found!\" style={{ width: \"50px\", height: \"50px\", marginTop: \"10px\" }} />\r\n                                        <span className=\"\" style={{ fontWeight: \"700\", fontSize: \"80%\" }}> JGNNFT </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <h4> Name </h4>\r\n                                <div className=\"mt-3\">\r\n                                    <input id=\"nftName\" name=\"nftName\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. “redeemable Cards with logo”\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <h4> Description <span style={{ fontSize: \"80%\", fontWeight: \"400\", color: \"gray\" }}> (Optional) </span></h4>\r\n                                <div className=\"mt-3\">\r\n                                    <input id=\"nftDescription\" name=\"nftDescription\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. “After purchasing you’ll able to get real cards”\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <div style={{ width: \"100%\" }}>\r\n                                    <div className=\"my-4\">\r\n                                        <h4> Royalties </h4>\r\n                                        <div className=\"mt-3\" style={{ position: \"relativ\" }}>\r\n                                            <select className=\"creatSingle_switch_formControl\" style={{ width: \"20%\" ,borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\" }} name=\"nftRoyalty\" id=\"nftRoyalty\">\r\n                                                <option style={{ height: \"2em\" }} value=\"5\">5%</option>\r\n                                                <option style={{ height: \"2em\" }} value=\"10\"> 10% </option>\r\n                                                <option style={{ height: \"2em\" }} value=\"20\">15%</option>\r\n                                                <option style={{ height: \"2em\" }} value=\"30\"> 20% </option>\r\n                                            </select>\r\n                                            {/* <input id=\"nftRoyalty\" name=\"nftRoyalty\" style = {{borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\"}} type=\"text\" placeholder=\"e.g. 10%\" /> */}\r\n                                            <span style={{ top: \"5px\", right: \"10px\", position: \"absolute\", color: \"gray\" }}>%</span>\r\n                                            <span style={{ color: \"gray\", fontSize: \"80%\", fontWeight: \"400\", }}> Suggested: 10%, 20%, 30% </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ml-3\" style={{ width: \"100%\" }}>\r\n                                    <div className=\"my-4\">\r\n                                        <h4> Number of copies </h4>\r\n                                        <div className=\"mt-3\" style={{ position: \"relativ\" }}>\r\n                                            <input id=\"nftSupply\" name=\"nftSupply\" style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. 10\" />\r\n                                            <span style={{ top: \"5px\", right: \"10px\", position: \"absolute\", color: \"gray\" }}>%</span>\r\n                                            <span style={{ color: \"gray\", fontSize: \"80%\", fontWeight: \"400\", }}> Amount of tokens </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <h4>  Properties  <span style={{ fontSize: \"80%\", fontWeight: \"400\", color: \"gray\" }}> (Optional) </span></h4>\r\n                                <div className=\"mt-3\">\r\n\r\n                                </div>\r\n                                <div className=\"mt-3\" id=\"propertyInputs\">\r\n                                    {this.state.properties.map((properties, index) => (\r\n                                        <div className=\"d-flex mb-2\">\r\n                                            <input id={`key${index + 1}`} name={`key${index + 1}`} style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\", marginRight: \"15px\" }} type=\"text\" placeholder=\"e.g. Size\" onChange={this.addNewInput} />\r\n                                            <input id={`value${index + 1}`} name={`value${index + 1}`} style={{ borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderLeft: \"none\", borderRight: \"none\", borderTop: \"none\", width: \"100%\" }} type=\"text\" placeholder=\"e.g. M\" onChange={this.addNewInput} />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                        <div className=\"my-5\">\r\n                            <button onClick={this.upload} className=\"btn px-4\" style={{ backgroundColor: \"#e6b000\", borderColor: \"#e6b000\", color: \"#fff\", fontWeight: \"600\" }}> Create Now </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mb-5\" style={{ marginLeft: \"50px\", order: \"2\" }}>\r\n                        <h4 className=\"mb-4\"> Preview </h4>\r\n                        <div className=\"py-4 d-flex justify-content-center align-items-center\" style={{ border: \"1px solid rgb(221, 221, 221)\", borderRadius: \"40px\", width: \"300px\", height: \"400px\", maxWidth: \"100%\" }}>\r\n                            <div>\r\n                                <div className=\"text-muted\"> {this.state.previewText} </div>\r\n\r\n                                <img\r\n                                    src={this.state.selectedFile}\r\n                                    alt=\"\"\r\n                                    style={{ width: \"100%\" }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onRequestClose={this.closeModal}\r\n                    style={this.customStyles}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                >\r\n                    <div class=\"content\">\r\n                        <div>\r\n                            <button\r\n                                onClick={this.closeModal}\r\n                                type=\"button\"\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"my-4\">\r\n                            <h4>Alerts</h4>\r\n                            <p className=\"text-muted\"> {this.state.loadingText}</p>\r\n                            <div className=\"mb-3 d-flex\">\r\n                                <div className=\"sweet-loading\" style={{marginLeft:\"40%\",marginRight:\"40%\"}}>\r\n                                    <ClipLoader css={override} size={60} color={\"#123abc\"} loading={this.state.modalIsOpen} speedMultiplier={1.5} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default creatMultiple;","import React, { Component } from 'react';\r\nimport \"./mainPage.css\";\r\nimport icon from '../Icons/art_logo.png';\r\nimport b_icon from '../Icons/ART-icon.png';\r\nimport CreateSingle from './creatSingle';\r\nimport CreateMultiple from './creatMultiple';\r\nimport  Nft721 from \"../contracts/ArtNft721.json\"\r\nimport  Nft1155 from \"../contracts/ArtNft1155.json\"\r\nimport  Auction from \"../contracts/ArtAuction.json\"\r\nimport getWallet from \"../nfts/connectWallet\"\r\n\r\nconst { ethereum } = window;\r\nlet web3;\r\nclass mainPage extends Component {\r\n\r\n    stateHandler = this.stateHandler.bind(this);\r\n\r\n    state = { formComponent: \"main\",\r\n              nft721: null, nft1155: null, auctionContract: null,web3: null            \r\n             }\r\n    loadSingle = () => {\r\n          this.setState({ formComponent:\"single\"})\r\n    }\r\n    loadMultiple = () => {\r\n          this.setState({ formComponent:\"multiple\"})\r\n    }\r\n\r\n    stateHandler() {\r\n        this.setState({\r\n            formComponent: \"main\"\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this;\r\n        if(this.isMetaMaskInstalled)\r\n        this.connectToMetaMask();\r\n        else console.log(\"Please install metamask!!\");\r\n      if(window.ethereum)\r\n      window.ethereum.on('accountsChanged', async function (accounts) {\r\n        self.connectToMetaMask()\r\n      })\r\n      \r\n  }\r\n  \r\n\r\nisMetaMaskInstalled() {\r\n    return Boolean(ethereum && ethereum.isMetaMask);\r\n  }\r\n  \r\n  async  connectToMetaMask() {\r\n    if(this.isMetaMaskInstalled)\r\n    try {\r\n      //Will Start the MetaMask Extension\r\n      web3 = await getWallet();\r\n      let account = await web3.eth.getAccounts();\r\n     // this.setConnectBtn(\"Create\")\r\n      this.setState({web3: web3});\r\n      let n721 = new web3.eth.Contract(\r\n        Nft721.abi, Nft721.contractAddress);\r\n\r\n        this.setState({nft721: n721});\r\n\r\n      let n1155 = new web3.eth.Contract(\r\n            Nft1155.abi, Nft1155.contractAddress);\r\n        this.setState({nft1155: n1155});\r\n        let auction = new web3.eth.Contract(\r\n            Auction.abi, Auction.contractAddress);\r\n        this.setState({auctionContract: auction});\r\n\r\n  \r\n    } catch (error) {\r\n      console.error(error);\r\n    }else console.log(\"Please install metamask!!\");\r\n  }\r\n\r\n    render() { \r\n        if(this.state.formComponent === \"single\"){return(<CreateSingle action={this.stateHandler} data={this.state} />)}\r\n        if(this.state.formComponent === \"multiple\"){return(<CreateMultiple action={this.stateHandler} data={this.state}/>)}\r\n        return ( \r\n            <div className = \"container-fluid p-0\" style = {{borderLeft: \"25px solid rgba(111,111,111,0)\", borderRight: \"25px solid rgba(111,111,111,0)\"}}>\r\n                <div className = \"container-fluid p-0 text-center\">\r\n                    <h1>Create Collectible</h1>\r\n                    <h5 className = \"mt-4 mx-auto\" style = {{maxWidth: \"750px\", lineHeight: \"2em\", fontWeight: \"700\"}}>Choose “single” if you want your collectible to be one of a kind or “Multiple” if you want to sell one collectible multiple times.</h5>\r\n                    <div className = \"py-5 mx-auto d-flex flex-wrap justify-content-around\" style = {{maxWidth: \"800px\"}}>\r\n                        <div onClick={this.loadSingle} className = \"sp_card_create\" style = {{cursor: \"pointer\", transition: \"all .2s\", padding: \"40px\", width: \"330px\", borderRadius: \"50px\", boxShadow: \"10px 15px 25px 0 rgb(0 0 0 / 20%)\"}}>\r\n                            <div className = \"pt-5 pb-5 d-flex justify-content-center\" style = {{height: \"220px\"}}>\r\n                                <img className = \"ml-2 mr-2\" style = {{height: \"100%\"}} src= {icon} alt=\"not found!\" />\r\n                            </div>\r\n                            <div className = \"text-center\">\r\n                                <div className = \"d-flex flex-wrap justify-content-center\" style = {{fontWeight: \"700\"}}>Single</div>\r\n                                <div className = \"d-flex flex-wrap justify-content-center\" style = {{color:\"gray\"}}>BEP-721</div>\r\n                            </div>\r\n                        </div>\r\n                        <div  onClick={this.loadMultiple} className = \"sp_card_create\" style = {{cursor: \"pointer\", transition: \"all .2s\", padding: \"40px\", width: \"330px\", borderRadius: \"50px\", boxShadow: \"10px 15px 25px 0 rgb(0 0 0 / 20%)\"}}>\r\n                            <div className = \"pt-5 pb-5 mx-auto d-flex justify-content-center\" style = {{height: \"220px\"}}>\r\n                                <img className = \"ml-2 mr-2\" style = {{height: \"100%\"}} src= {b_icon} alt=\"not found!\" />\r\n                            </div>\r\n                            <div className = \"text-center\">\r\n                                <div className = \"d-flex flex-wrap justify-content-center\" style = {{fontWeight: \"700\"}}>Multiple</div>\r\n                                <div className = \"d-flex flex-wrap justify-content-center\" style = {{color:\"gray\"}}>BEP-1155</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h5 className = \"mt-4 mx-auto\" style = {{maxWidth: \"750px\", lineHeight: \"2em\", fontWeight: \"700\"}}>We do not own your private keys and cannot access your funds without your confirmation.</h5>\r\n                </div>\r\n            </div>\r\n         );\r\n        }\r\n    }\r\nexport default mainPage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo01 from '../Icons/art_logo.png';\r\nimport search_icon from '../Icons/search-icon.svg';\r\nimport getWallet from \"../nfts/connectWallet\"\r\nimport Default_avatar from \"../Icons/avatardefault.png\";\r\nimport axios from 'axios';\r\n\r\nconst { ethereum } = window;\r\nlet web3,accounts\r\nclass navBar extends Component {\r\n    state = {\r\n        metaMask : false,\r\n        account : \"\",\r\n        user: null\r\n    }\r\n\r\n    componentDidMount= async()=> {\r\n        web3 = await getWallet();\r\n        accounts = await web3.eth.getAccounts();\r\n        this.loadDB();\r\n        this.connectToMetaMask()\r\n        let self = this;\r\n        if(window.ethereum)\r\n        ethereum.on('accountsChanged', async function (accounts) {\r\n            self.connectToMetaMask()\r\n        })\r\n\r\n    }\r\n\r\n    \r\n  loadDB = async function () {\r\n    try {\r\n      let link = \"/user/\"+ accounts[0];\r\n      let res = await axios.get(link);\r\n      if (res.status === 200) {\r\n         console.log(\"USer NAV DAta: \"+ JSON.stringify(res.data))\r\n        this.setState({ user: res.data });\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n    connectWallet=()=>{\r\n        if (this.isMetaMaskInstalled) {\r\n            this.connectToMetaMask();\r\n        }\r\n        else console.log(\"Please install metamask!!\");\r\n\r\n    }\r\n\r\n    isMetaMaskInstalled=()=> {\r\n        return Boolean(ethereum && ethereum.isMetaMask);\r\n    }\r\n\r\n     connectToMetaMask=async ()=> {\r\n        if (this.isMetaMaskInstalled)\r\n            try {\r\n                //Will Start the MetaMask Extension\r\n                web3 = await getWallet();\r\n                // this.setConnectBtn(\"Create\")\r\n                let acc = accounts[0].substring(0,6)+\"......\"+accounts[0].substring(36,42)\r\n                this.setState({ metaMask: true, account: acc });\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            } else console.log(\"Please install metamask!!\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            <img src={Logo01} alt=\"VenlyMarkiet Beta\" width=\"80\" />\r\n                            <span className=\"badge badge-primary ml-2\">ART-NFT</span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item input-group navbar_input \">\r\n                        <img style={{ marginRight: \"10px\", width: \"20px\" }} alt=\"\" src={search_icon} />\r\n                        <input className=\"navbar_input\" type=\"text\" placeholder=\"Search Market\" />\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n                <ul className=\"nav\">\r\n\r\n                    <li className=\"nav-item\">\r\n                        {this.state.metaMask?\r\n                        <Link to=\"/collections\">\r\n                        <img\r\n                            style={{width:\"15%\", float: \"right\"}}\r\n                            className=\"nav-link\"\r\n                            src={!this.state.user?Default_avatar:\"http://\"+this.state.user.pic}\r\n                            alt=\"\"\r\n                        /><br/>\r\n                        <label style={{float: \"right\"}}>{this.state.account}</label>\r\n                        </Link>:\r\n                            <div style={{ backgroundColor: \"#af48ff\", borderColor: \"#af48ff\", color: \"white\" }} onClick={this.connectWallet} className=\"btn nav-link font-weight-bold\">Connect</div>\r\n                    }\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default navBar;","import React, { useState, useEffect } from 'react';\r\nimport BinanceLogo from '../Icons/binance-logo.svg';\r\nimport verified from '../Icons/verified.svg';\r\nimport \"./ItemCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Auction from \"../nfts/artAuction\"\r\nimport Auction1155 from \"../nfts/artAuction1155\"\r\nimport Modal from \"react-modal\";\r\nimport axios from 'axios';\r\nimport getWallet from '../nfts/connectWallet';\r\nimport Token from \"../contracts/DOGToken.json\"\r\nimport  AuctionContract from \"../contracts/ArtAuction.json\"\r\n\r\nlet auction, web3,account;\r\nexport default function ItemCard({ nftData }) {\r\n    const [nftBtn, setNftBtn] = useState(\"Bid\");\r\n    const [balance, setBalance] = useState(0);\r\n    const [dogBalance, setDogBalance] = useState(0);\r\n    const [bidModalIsOpen, setBidModalIsOpen] = useState(false);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [auctionTimer, setAuctionTimer] = useState(\"00:00:00\");\r\n    const [isBid, setIsBid] = useState(false);\r\n    const [latestBid, setLatestBid] = useState(0);\r\n    const [errors, setErrors] = useState(\"\");\r\n\r\n    useEffect(async() => {\r\n        web3 = await getWallet()\r\n        account = await web3.eth.getAccounts();\r\n        checkNftStatus();\r\n        getUserBalance()\r\n        const interval = setInterval(() => {\r\n            auctionTime();\r\n            \r\n        })\r\n    }, [account,auction,web3]);\r\n\r\n    const click = async () => {\r\n        if (nftBtn === \"Bid\" || nftBtn === \"Bid Higher\") {\r\n            if(nftData.auction){\r\n                let contract = new web3.eth.Contract(\r\n                    AuctionContract.abi, AuctionContract.contractAddress);\r\n                let bid = await contract.methods.getCurrentBid(nftData.auction.auction_id).call(); \r\n                setLatestBid(bid)\r\n                }\r\n            openBidModal();\r\n            checkBidStatus()\r\n        } else if (nftBtn === \"Cancel Auction\") {\r\n            cancelAuction();\r\n        } else if(\"Create Auction\") {\r\n            openModal();\r\n        }else if(this.state.nftBtn === \"Winner:Claim Bid\") {\r\n            claimAuction();\r\n        }\r\n    }\r\n\r\n    const bidAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n        let price = document.getElementById(\"bidPrice\").value;\r\n        let type = document.getElementById(\"bidType\").value;\r\n        let auctionId;\r\n        if (nftData.auction.onAuction) {\r\n            auctionId = nftData.auction.auction_id;\r\n        }\r\n        let res = await auction.nftBid(auctionId, price)\r\n        if(!res) return;\r\n        let bid = {\r\n            amount: price + type,\r\n            account: account[0]\r\n        }\r\n        try {\r\n            let link = \"/nfts/bid/\" + id;\r\n            let res = await axios.post(link, bid);\r\n            if (res.status === 200) {\r\n                window.location.reload();\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const checkBidStatus =async () => {\r\n        let currentBid = (parseFloat(latestBid[0])/1e18).toFixed(3);\r\n        if(nftData.price.includes(\"BNB\")&&balance<=0.00&&balance<=currentBid){\r\n            setIsBid(true)\r\n        }else if(nftData.price.includes(\"DOG\")&&dogBalance<=0.00&&dogBalance<=currentBid){\r\n            setIsBid(true)\r\n        }\r\n    }\r\n\r\n    const createAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n        let price = document.getElementById(\"nftPrice\").value;\r\n        let type = document.getElementById(\"tokenType\").value;\r\n        let deadline = document.getElementById(\"deadline\").value;\r\n        let totaltime = (new Date().getTime() / 1000) + deadline * 86400;\r\n        let auctionId = await auction.auctionId();\r\n        let res = await auction.createAuction(id, price * 1e18, type.toLowerCase(), parseInt(totaltime))\r\n        if(!res) return;\r\n        let auctionData = {\r\n            auction_id: auctionId,\r\n            price: price + type,\r\n            onAuction: true,\r\n            time: parseInt(totaltime),\r\n            bids: []\r\n        }\r\n        let link = \"/nfts/update/\" + id;\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data: auctionData,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        console.log(JSON.stringify(response.data))\r\n                        Location.reload(false)\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const claimAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n\r\n        let auctionId;\r\n        if (nftData.auction.onAuction) {\r\n            auctionId = nftData.auction.auction_id;\r\n        }\r\n        if (auctionId === \"null\") return;\r\n        let res = await auction.cancelAuction(auctionId);\r\n        if(!res) return;\r\n        \r\n        let link = \"/nfts/auction/\" + id;\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data:{newOwner:account[0]},\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        Location.reload(false)\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const cancelAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n\r\n        let auctionId;\r\n        if (nftData.auction.onAuction) {\r\n            auctionId = nftData.auction.auction_id;\r\n        }\r\n        if (auctionId === \"null\") return;\r\n        let res = await auction.cancelAuction(auctionId);\r\n        if(!res) return;\r\n        \r\n        let link = \"/nfts/auction/\" + id;\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        Location.reload(false)\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const checkNftStatus = async () => {\r\n        if(nftData.type===\"Single Item\"){\r\n        auction = new Auction();\r\n        }else{\r\n            auction = new Auction1155();\r\n        }\r\n        let owner = nftData.owners[1].name;\r\n\r\n        if (nftData.price === '0' && owner === account[0]) {\r\n            setNftBtn(\"Create Auction\")\r\n        }\r\n        else if (nftData.price !== '0' && owner === account[0]) {\r\n            setNftBtn(\"Cancel Auction\")\r\n        }\r\n        else if (nftData.price === '0') {\r\n            setNftBtn(\"Not On Sale\")\r\n        }\r\n       else\r\n        if(nftData.auction){\r\n            if(!nftData.auction.bids) return;\r\n            if(!nftData.auction.bids.find(b => b.account === account[0])) return;\r\n            let contract = new web3.eth.Contract(\r\n                AuctionContract.abi, AuctionContract.contractAddress);\r\n            let bid = await contract.methods.getCurrentBid(nftData.auction.auction_id).call(); \r\n            if(bid[1]===\"0x0000000000000000000000000000000000000000\") return;\r\n            let currentTime = parseInt(new Date().getTime()/1000);\r\n\r\n            if(bid[1] === account[0]){\r\n                setNftBtn(\"Wining Bid\")\r\n                if(currentTime>=nftData.auction.time)\r\n                        setNftBtn(\"Winner:Claim Bid\");\r\n            }\r\n            else{\r\n                setNftBtn(\"Bid Higher\")\r\n            }\r\n            }\r\n    }\r\n\r\n    const getUserBalance = async () => {\r\n        try{\r\n        let dogToken = new web3.eth.Contract(\r\n            Token.abi, Token.contractAddress);\r\n        let dog = await dogToken.methods.balanceOf(account[0]).call();\r\n        setDogBalance(parseFloat(dog / 1e18).toFixed(3))\r\n        var balance = await web3.eth.getBalance(account[0]);\r\n        setBalance(parseFloat(balance / 1e18).toFixed(3))\r\n        }catch(e){console.log(e.Error)}\r\n    }\r\n\r\n    const auctionTime = async () => {\r\n        if (nftData.auction) {\r\n            if(!nftData.auction.onAuction) return;\r\n            let time = nftData.auction.time\r\n            let currentTime = parseInt(new Date().getTime() / 1000);\r\n            time = time - currentTime;\r\n            if (parseInt(time) <= 0) {\r\n                time = \"Auction Ended\"\r\n            } else {\r\n                var seconds = time;\r\n                var minutes = Math.floor(seconds / 60);\r\n                var hours = Math.floor(minutes / 60);\r\n                var days = Math.floor(hours / 24);\r\n\r\n                hours = hours - (days * 24);\r\n                minutes = minutes - (days * 24 * 60) - (hours * 60);\r\n                seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\r\n                time = days + \" D:\" + hours + \" H:\" + minutes + \" M:\" + seconds + \" S\";\r\n                setAuctionTimer(time);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n        },\r\n    };\r\n    const openModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n    const openBidModal = () => {\r\n        setBidModalIsOpen(true);\r\n    };\r\n\r\n    const closeBidModal = () => {\r\n        setBidModalIsOpen(false);\r\n    };\r\n    const validateBid = (e) => {\r\n        let currentBid = (parseFloat(latestBid[0])/1e18).toFixed(3);\r\n        if(e.target.value >= currentBid){\r\n            setIsBid(false);\r\n            setErrors(\"\")\r\n        }\r\n        else{\r\n           setIsBid(true);\r\n           setErrors(\"Must greater than last Bid!\")\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"item-card\" >\r\n            <Link style={{ textDecorationLine: \"none\" }} to={`/nft/${nftData.info[0].nftID}`}>\r\n                <div className=\"item-card--thumbnail\">\r\n                    <img className=\"nft-image__vertical card-img-top\" src={\"http://\" + nftData.image} alt=\"No Found\" />\r\n                </div>\r\n                <div className=\"item-card--body\">\r\n                    <div className=\"title\">\r\n                        <h6 className=\"contract-name\">ART NFT Minter</h6>\r\n                        <img src={verified} alt=\"\" height=\"16\" />\r\n                    </div>\r\n                    <h5>{nftData.name}</h5>\r\n                    <p className=\"text-muted\">{nftData.type}</p>\r\n                    <p className=\"text-muted\" style={{ float: 'right' }}>{auctionTimer}</p>\r\n\r\n                    <div style={{ display: \"flex\", margin: \"9px 0 12px\" }}>\r\n                        <span style={{ display: \"flex\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                            <span className=\"item_card_badge\">\r\n                                <img src={BinanceLogo} alt=\"Not found\" height=\"12\" />\r\n                            </span>\r\n                        </span>\r\n\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                <div className=\"\">\r\n                    <div className=\"text-muted\" style={{ fontSize: \"10px\" }}>LIST PRICE</div>\r\n                    <div style={{ color: \"#7927ff\", lineHeight: \"16px\", fontSize: \"16px\", fontWeight: \"700\", }}>\r\n                        <span>{nftData.price}</span>\r\n                    </div>\r\n                </div>\r\n                <button onClick={click} disabled={nftBtn === \"Not On Sale\"} className=\"btn itemcard_button_buy\" style={{ color: \"white\", backgroundColor: \" #7927ff\", borderColor: \"#7927ff\" }}>{nftBtn}</button>\r\n            </div>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                ariaHideApp={false}\r\n            >\r\n                <div class=\"content\">\r\n                    <div>\r\n                        <button\r\n                            onClick={closeModal}\r\n                            type=\"button\"\r\n                            class=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                        >\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"my-4\">\r\n                        <h4>Auction sale price</h4>\r\n                        <p className=\"text-muted\"> Enter the price for which the item will be start auction. </p>\r\n                        <div className=\"mb-3 d-flex\">\r\n                            <input type=\"text\" id=\"nftPrice\" name=\"nftPrice\" style={{ width: \"100%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} />\r\n                            <select className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"tokenType\" id=\"tokenType\">\r\n                                <option style={{ height: \"2em\" }} value=\"BNB\">BNB</option>\r\n                                <option style={{ height: \"2em\" }} value=\"DOG\"> DOG </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3 d-flex\">\r\n                            <label className=\"text-muted\" style={{ width: \"100%\" }}>Sale Deadline</label>\r\n                            <select className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", float: \"right\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"deadline\" id=\"deadline\">\r\n                                <option style={{ height: \"2em\" }} value=\"1\">1 Day</option>\r\n                                <option style={{ height: \"2em\" }} value=\"3\"> 3 Days </option>\r\n                                <option style={{ height: \"2em\" }} value=\"5\">5 Days</option>\r\n                                <option style={{ height: \"2em\" }} value=\"7\"> 7 Days</option>\r\n                                <option style={{ height: \"2em\" }} value=\"10\">10 Days</option>\r\n                            </select>\r\n                        </div>\r\n                        <button onClick={createAuction} className=\" btn btn-block\" style={{ width: \"50%\", marginRight: \"25%\", marginLeft: \"25%\", align: \"center\", backgroundColor: \"#7927ff\", color: \"#fff\", borderColor: \"#7927ff\" }}>Place Auction</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                isOpen={bidModalIsOpen}\r\n                onRequestClose={closeBidModal}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                ariaHideApp={false}\r\n            >\r\n                <div class=\"content\">\r\n                    <div>\r\n                        <button\r\n                            onClick={closeBidModal}\r\n                            type=\"button\"\r\n                            class=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                        >\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"my-4\">\r\n                        <h4>bid on Auction</h4>\r\n                        <p className=\"text-muted\"> Enter the your bid price for auction. </p>\r\n                        <div className=\"mb-3 d-flex\">\r\n                            <input onChange={validateBid} type=\"text\" id=\"bidPrice\" placeholder={\"Last bid:\"+(parseFloat(latestBid[0])/1e18).toFixed(3)} name=\"nftPrice\" style={{ width: \"100%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} />\r\n                            <br/><span style={{color: \"red\"}}>{errors}</span>\r\n                            <select disabled className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"bidType\" id=\"bidType\">\r\n                                <option selected={nftData.price.includes(\"BNB\")} style={{ height: \"2em\" }} value=\"BNB\">BNB</option>\r\n                                <option selected={nftData.price.includes(\"DOG\")} style={{ height: \"2em\" }} value=\"DOG\"> DOG </option>\r\n                            </select>\r\n                        </div>\r\n                        <div style={{ width: \"50%\", marginRight: \"25%\", marginLeft: \"25%\" }}>\r\n                            <p className=\"text-muted\"> {nftData.price.includes(\"BNB\") ? balance + \"BNB\" : dogBalance + \"DOG\"} </p>\r\n                            <button disabled={isBid} onClick={bidAuction} className=\" btn btn-block\" style={{ backgroundColor: \"#7927ff\", color: \"#fff\", borderColor: \"#7927ff\" }}>Place Bid</button>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/art_logo.4e083da0.png\";","export default __webpack_public_path__ + \"static/media/ART-icon.67b5d584.png\";","export default __webpack_public_path__ + \"static/media/site_symb.1c3a22a4.png\";","import Web3 from \"web3\";\n\nconst getWallet = () =>\n  new Promise( async(resolve, reject) => {\n    console.log(\"event promise\");\n\n      if (window.ethereum) {\n        console.log(\"window.ethereum\");\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.enable();\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      else if (window.web3) {\n        console.log(\"window.web3\");\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n  });\n\nexport default getWallet;","export default __webpack_public_path__ + \"static/media/search-icon.15fc2d9f.svg\";","export default __webpack_public_path__ + \"static/media/avatardefault.10691648.png\";","export default __webpack_public_path__ + \"static/media/TRM-banner.c62329b4.jpeg\";","export default __webpack_public_path__ + \"static/media/bsc-logo.a0510dab.svg\";","import React, { Component } from 'react';\r\nimport TRMbanner from '../Icons/TRM-banner.jpeg';\r\nimport \"./UpperBody.css\";\r\nclass upperBody extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className = \"upperbody_category_banner\">\r\n                <div className = \"market-content-container\">\r\n                    <div style = {{order: \"\"}}>\r\n                        <div style = {{fontWeight: \"700\", fontSize: \"36px\", lineHeight: \"120%\", color: \"white\", width: \"325px\", marginBottom: \"20px\"}}>\r\n                            Neon District: Exclusive new items added\r\n                        </div>\r\n                        <button className = \"btn\" style = {{height: \"37px\", color: \"#fff\", backgroundColor: \"#7927ff\", borderColor: \"#7927ff\", fontWeight: \"700\"}}> Explore items </button>\r\n                    </div>\r\n                    <img src={TRMbanner} alt=\"\" height = \"261px\" />\r\n                </div>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default upperBody;","export default __webpack_public_path__ + \"static/media/binance-logo.1228492c.svg\";","export default __webpack_public_path__ + \"static/media/verified.1a00d8b1.svg\";","import React, { Component } from 'react';\r\nimport BinanceLogo from '../Icons/binance-logo.svg';\r\nimport axios from 'axios';\r\nimport Modal from \"react-modal\";\r\nimport Auction from \"../nfts/artAuction\"\r\nimport Auction1155 from \"../nfts/artAuction1155\"\r\nimport getWallet from '../nfts/connectWallet';\r\nimport AuctionContract from \"../contracts/ArtAuction.json\"\r\nimport Contract1155 from \"../contracts/ArtNFTAuction.json\"\r\nimport Token from \"../contracts/DOGToken.json\"\r\n\r\n\r\nlet auction, web3, account, nftData;\r\nclass itemCardDetail extends Component {\r\n    state = {\r\n        nft: {},\r\n        owner: [],\r\n        info: {},\r\n        history: {},\r\n        properties: [],\r\n        date: \"\",\r\n        nftBtn: \"BID ON ITEM\",\r\n        balance: 0,\r\n        dogBalance: 0,\r\n        errors: \"\",\r\n        latestBid: {},\r\n        auctionTimer: \"00:00:00\",\r\n        bidType: \"BNB\",\r\n        currentBid: 0\r\n    }\r\n\r\n    clickBid = async () => {\r\n        if (this.state.nftBtn === \"BID ON ITEM\") {\r\n            if (this.state.nft.auction) {\r\n                let contract;\r\n                if (this.state.nft.type === \"Single Item\") {\r\n                    contract = new web3.eth.Contract(\r\n                        AuctionContract.abi, AuctionContract.contractAddress);\r\n                } else {\r\n                     contract = new web3.eth.Contract(\r\n                        Contract1155.abi, Contract1155.contractAddress);\r\n                }\r\n                let bid = await contract.methods.getCurrentBid(this.state.nft.auction.auction_id).call();\r\n                this.setState({ latestBid: bid });\r\n                this.setState({ currentBid: parseFloat(bid[0]) / 1e18.toFixed(3) })\r\n                if (bid[0] <= 0) {\r\n                    this.setState({ currentBid: this.state.nft.price })\r\n                }\r\n            }\r\n            this.openBidModal();\r\n        } else if (this.state.nftBtn === \"CANCEL THIS AUCTION\") {\r\n            this.cancelAuction();\r\n        } else if (this.state.nftBtn === \"PLACE ON SALE\") {\r\n            this.openModal();\r\n        } else if (this.state.nftBtn === \"WINNER:CLAIM BID\") {\r\n            this.claimAuction();\r\n        }\r\n    }\r\n\r\n    createAuction = async () => {\r\n        let nftId = this.props.match.params.id\r\n        let price = document.getElementById(\"nftPrice\").value;\r\n        let type = document.getElementById(\"tokenType\").value;\r\n        let deadline = document.getElementById(\"deadline\").value;\r\n        let totaltime = (new Date().getTime() / 1000) + deadline * 86400;\r\n        let auctionId = await auction.auctionId();\r\n\r\n        let res = await auction.createAuction(nftId, price * 1e18, type.toLowerCase(), parseInt(totaltime))\r\n        if (!res) return;\r\n        let auctionData = {\r\n            auction_id: auctionId,\r\n            price: price + type,\r\n            onAuction: true,\r\n            time: parseInt(totaltime),\r\n            bids: []\r\n        }\r\n        let link = \"/nfts/update/\" + nftId;\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                url: link,\r\n                data: auctionData,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n                ,\r\n                timeout: 5000,\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        window.location.reload();\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    cancelAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n\r\n        let auctionId;\r\n        if (nftData.auction.onAuction) {\r\n            auctionId = nftData.auction.auction_id;\r\n        }\r\n        if (auctionId === \"null\") return;\r\n        let res = await auction.cancelAuction(auctionId);\r\n        if (!res) return;\r\n\r\n        let link = \"/nfts/auction/\" + id;\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                data: {},\r\n                url: link,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        window.location.reload();\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    claimAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n\r\n        let auctionId;\r\n        if (nftData.auction.onAuction) {\r\n            auctionId = nftData.auction.auction_id;\r\n        }\r\n        if (auctionId === \"null\") return;\r\n        let res = await auction.claimAuction(auctionId);\r\n        if (!res) return;\r\n\r\n        let link = \"/nfts/auction/\" + id;\r\n        try {\r\n            axios({\r\n                method: \"POST\",\r\n                data: { newOwner: account[0] },\r\n                url: link,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json;charset=utf-8\"\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Success, firm added\")\r\n                        //window.location.reload();\r\n                    } else {\r\n                        console.log(\"Error occurred\")\r\n                    }\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        let self = this;\r\n        web3 = await getWallet();\r\n        account = await web3.eth.getAccounts();\r\n        this.loadDB();\r\n        if(this.state.nft.type ===\"Single Item\")\r\n        auction = new Auction();\r\n        else auction = new Auction1155();\r\n        this.getUserBalance()\r\n        if (window.ethereum)\r\n            window.ethereum.on('accountsChanged', async function (accounts) {\r\n                self.loadDB()\r\n            })\r\n    }\r\n\r\n    loadDB = async function () {\r\n        try {\r\n            let nftId = this.props.match.params.id;\r\n            let link = \"/nfts/\" + nftId;\r\n            let res = await axios.get(link);\r\n            if (res.status === 200) {\r\n                nftData = res.data;\r\n                this.setState({ nft: res.data })\r\n                this.setState({ owner: res.data.owners })\r\n                this.setState({ properties: res.data.properties })\r\n                this.setState({ info: res.data.info[0] })\r\n                this.setState({ history: res.data.history[0] })\r\n                let date = new Date(res.data.history[0].date).toISOString().split('T')[0]\r\n                this.setState({ date: date })\r\n\r\n                if (res.data.price === '0' && res.data.owners[1].name === account[0]) {\r\n                    this.setState({ nftBtn: \"PLACE ON SALE\" })\r\n                }\r\n                else if (res.data.price !== '0' && res.data.owners[1].name === account[0]) {\r\n                    this.setState({ nftBtn: \"CANCEL THIS AUCTION\" })\r\n                }\r\n                else if (res.data.price === '0') {\r\n                    this.setState({ nftBtn: \"NOT ON SALE\" })\r\n                }\r\n\r\n                if (nftData.price.includes(\"DOG\")) {\r\n                    this.setState({ bidType: \"DOG\" })\r\n                }\r\n                setInterval(() => {\r\n                    this.auctionTime();\r\n                })\r\n\r\n                if (nftData.auction && nftData.price !== \"0\") {\r\n                    if (!nftData.auction.bids) return;\r\n                    if (!nftData.auction.bids.find(b => b.account === account[0])) return;\r\n                    let contract = new web3.eth.Contract(\r\n                        AuctionContract.abi, AuctionContract.contractAddress);\r\n                    let bid = await contract.methods.getCurrentBid(nftData.auction.auction_id).call();\r\n                    if (bid[1] === \"0x0000000000000000000000000000000000000000\") return;\r\n                    let currentTime = parseInt(new Date().getTime() / 1000);\r\n\r\n                    if (bid[1] === account[0]) {\r\n                        this.setState({ nftBtn: \"BID WINNING\" })\r\n                        if (currentTime >= nftData.auction.time)\r\n                            this.setState({ nftBtn: \"WINNER:CLAIM BID\" });\r\n                    }\r\n                    else {\r\n                        this.setState({ nftBtn: \"PLACE HIGH BID\" })\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getUserBalance = async () => {\r\n        let dogToken = new web3.eth.Contract(\r\n            Token.abi, Token.contractAddress);\r\n        let dog = await dogToken.methods.balanceOf(account[0]).call();\r\n        this.setState({ dogBalance: parseFloat(dog / 1e18).toFixed(3) })\r\n        var balance = await web3.eth.getBalance(account[0]);\r\n        this.setState({ balance: parseFloat(balance / 1e18).toFixed(3) })\r\n    }\r\n\r\n    auctionTime = async () => {\r\n        if (nftData.auction) {\r\n            if (!nftData.auction.onAuction) return;\r\n            let time = nftData.auction.time\r\n            let currentTime = parseInt(new Date().getTime() / 1000);\r\n            time = time - currentTime;\r\n            if (parseInt(time) <= 0) {\r\n                time = \"Auction Ended\"\r\n            } else {\r\n                var seconds = time;\r\n                var minutes = Math.floor(seconds / 60);\r\n                var hours = Math.floor(minutes / 60);\r\n                var days = Math.floor(hours / 24);\r\n\r\n                hours = hours - (days * 24);\r\n                minutes = minutes - (days * 24 * 60) - (hours * 60);\r\n                seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\r\n                time = days + \" D:\" + hours + \" H:\" + minutes + \" M:\" + seconds + \" S\";\r\n                this.setState({ auctionTimer: time });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    bidAuction = async () => {\r\n        let id = nftData.info[0].nftID\r\n        let auctionId;\r\n        if (nftData.auction.onAuction) {\r\n            auctionId = nftData.auction.auction_id;\r\n        }\r\n        let price = document.getElementById(\"bidPrice\").value;\r\n        let type = document.getElementById(\"bidType\").value;\r\n        let res = await auction.nftBid(auctionId, price + type)\r\n        if (!res) return;\r\n        let bid = {\r\n            amount: price + type,\r\n            account: account[0]\r\n        }\r\n        try {\r\n            let link = \"/nfts/bid/\" + id;\r\n            let res = await axios.post(link, bid);\r\n            if (res.status === 200) {\r\n                window.location.reload();\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    validateBid = (e) => {\r\n        //let currentBid = (parseFloat(this.state.latestBid[0])/1e18).toFixed(3);\r\n        if (e.target.value > parseFloat(this.state.currentBid)) {\r\n            this.setState({ isBid: false });\r\n            this.setState({ errors: \"\" })\r\n        }\r\n        else {\r\n            this.setState({ isBid: false });\r\n            this.setState({ errors: \"Must greater than last Bid!\" })\r\n        }\r\n    };\r\n    customStyles = {\r\n        content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n        },\r\n    };\r\n    openModal = () => {\r\n        this.setState({ modalIsOpen: true });\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ modalIsOpen: false });\r\n    };\r\n\r\n    openBidModal = () => {\r\n        this.setState({ bidModalIsOpen: true });\r\n    };\r\n\r\n    closeBidModal = () => {\r\n        this.setState({ bidModalIsOpen: false });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-7\">\r\n                        <img src={\"http://\" + this.state.nft.image} alt=\"Not found\" width=\"100%\" className=\"img-fluid img-thumbnail ml-2 mr-2\" />\r\n                    </div>\r\n                    <div className=\"col-sm-5 border border-brown\">\r\n                        <div className=\"ml-2 p-5\">\r\n                            <div className=\"row p-0\">\r\n                                <div className=\"col-sm-8\">\r\n                                    <p className=\"text-muted\" style={{ fontSize: \"14px\" }}>{this.state.nft.type} </p>\r\n                                </div>\r\n                                <div className=\"col-sm-4 text-right\">\r\n                                    <span class=\"fab fa-cloudsmith\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"badge badge-info\" style={{ backgroundColor: \"#f2e9ff\" }}>\r\n                                    <img src={BinanceLogo} alt=\"not found\" width=\"24\" />\r\n                                </span>\r\n                            </div>\r\n                            <p>{this.state.nft.description}</p>\r\n                            <div style={{ float: \"left\" }}>\r\n                                <p className=\"text-muted m-0\" style={{ fontSize: \"12px\" }}>LIST PRICE </p>\r\n                                <h4 className=\"text-primary\">\r\n                                    <span>{this.state.nft.price}</span>\r\n                                </h4>\r\n                            </div>\r\n                            <div style={{ float: \"right\" }}>\r\n                                <p className=\"text-muted m-0\" style={{ fontSize: \"12px\" }}>COPIES </p>\r\n                                <h4 className=\"text-primary\">\r\n                                    <span>{this.state.nft.tokenSupply}</span>\r\n                                </h4>\r\n                            </div>\r\n                            <button onClick={this.clickBid} disabled={this.state.nftBtn === \"NOT ON SALE\"} className=\" btn btn-block\" style={{ backgroundColor: \"#7927ff\", color: \"#fff\", borderColor: \"#7927ff\" }}>{this.state.nftBtn}</button>\r\n                            <p className=\"text-muted\" style={{ float: 'right' }}>{this.state.auctionTimer}</p>\r\n                        </div>\r\n\r\n                        <div className=\"border border-brown p-5 mt-5\">\r\n                            <button className=\"btn btn-block text-left font-weight-bold\" data-toggle=\"collapse\" data-target=\"#iteminfo\">Item info</button>\r\n                            <div id=\"iteminfo\" className=\"collapse\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <p className=\"text-muted mb-0 mt-4\">LIST DATE</p>\r\n                                        <p>{this.state.date}</p>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <p className=\"text-muted mb-0 mt-4\">CHAIN</p>\r\n                                        <p>BSC</p>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"text-muted\">CONTRACT ADDRESS</p>\r\n                                <a style={{ textDecorationLine: \"none\" }} href={\"https://testnet.bscscan.com/address/\" + this.state.info.contractAddress}>{this.state.info.contractAddress}</a>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\"></div>\r\n                                    <div className=\"col-sm-6\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"btn btn-block text-left font-weight-bold mt-4 mb-4\" data-toggle=\"collapse\" data-target=\"#ceeinfo\">Collection info</button>\r\n                            <div id=\"ceeinfo\" className=\"collapse\">\r\n                                {this.state.owner.map((el, i) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <h6 className=\"mt-4 mb-4\">{el.role}</h6>\r\n                                            <p>{el.name}</p>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"container-fluid\">\r\n                            <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#properties\">Properties</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#stats\">Stats</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#boosts\">Boosts</a>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"tab-content\">\r\n                                <div id=\"properties\" className=\"container tab-pane active\"><br />\r\n                                    {this.state.properties.map((el, i) => {\r\n                                        return (\r\n                                            <div>\r\n                                                <h6 className=\"mt-4 mb-4\">{Object.keys(el) + \"(\" + el[Object.keys(el)] + \")\"}</h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div id=\"stats\" className=\"container tab-pane\"><br />\r\n                                    <p>No stats found for this asset</p>\r\n                                </div>\r\n                                <div id=\"boosts\" className=\"container tab-pane\"><br />\r\n                                    <p>No boosts found for this asset</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    style={this.customStyles}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                >\r\n                    <div class=\"content\">\r\n                        <div>\r\n                            <button\r\n                                onClick={this.closeModal}\r\n                                type=\"button\"\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"my-4\">\r\n                            <h4>Auction sale price</h4>\r\n                            <p className=\"text-muted\"> Enter the price for which the item will be start auction. </p>\r\n                            <div className=\"mb-3 d-flex\">\r\n                                <input type=\"text\" id=\"nftPrice\" name=\"nftPrice\" style={{ width: \"100%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} />\r\n                                <select className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"tokenType\" id=\"tokenType\">\r\n                                    <option style={{ height: \"2em\" }} value=\"BNB\">BNB</option>\r\n                                    <option style={{ height: \"2em\" }} value=\"DOG\"> DOG </option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mb-3 d-flex\">\r\n                                <label className=\"text-muted\" style={{ width: \"100%\" }}>Sale Deadline</label>\r\n                                <select className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", float: \"right\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"deadline\" id=\"deadline\">\r\n                                    <option style={{ height: \"2em\" }} value=\"1\">1 Day</option>\r\n                                    <option style={{ height: \"2em\" }} value=\"3\"> 3 Days </option>\r\n                                    <option style={{ height: \"2em\" }} value=\"5\">5 Days</option>\r\n                                    <option style={{ height: \"2em\" }} value=\"7\"> 7 Days</option>\r\n                                    <option style={{ height: \"2em\" }} value=\"10\">10 Days</option>\r\n                                </select>\r\n                            </div>\r\n                            <button onClick={this.createAuction} className=\" btn btn-block\" style={{ width: \"50%\", marginRight: \"25%\", marginLeft: \"25%\", align: \"center\", backgroundColor: \"#7927ff\", color: \"#fff\", borderColor: \"#7927ff\" }}>Place On Auction</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    isOpen={this.state.bidModalIsOpen}\r\n                    onRequestClose={this.closeBidModal}\r\n                    style={this.customStyles}\r\n                    contentLabel=\"Example Modal\"\r\n                    ariaHideApp={false}\r\n                >\r\n                    <div class=\"content\">\r\n                        <div>\r\n                            <button\r\n                                onClick={this.closeBidModal}\r\n                                type=\"button\"\r\n                                class=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"my-4\">\r\n                            <h4>bid on Auction</h4>\r\n                            <p className=\"text-muted\"> Enter the your bid price for auction. </p>\r\n                            <div className=\"mb-3 d-flex\">\r\n                                <input onChange={this.validateBid} type=\"text\" id=\"bidPrice\" placeholder={\"Last bid:\" + this.state.currentBid} name=\"nftPrice\" style={{ width: \"100%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} />\r\n                                <br /><span style={{ color: \"red\" }}>{this.state.errors}</span>\r\n                                <select disabled className=\"ml-3\" style={{ width: \"50%\", borderBottom: \"1px solid hsla(0,0%,39.2%,.2)\", borderRadius: '0', borderTop: 'none', borderLeft: 'none', borderRight: 'none' }} name=\"bidType\" id=\"bidType\">\r\n                                    <option selected={this.state.bidType === \"BNB\"} style={{ height: \"2em\" }} value=\"BNB\">BNB</option>\r\n                                    <option selected={this.state.bidType === \"DOG\"} style={{ height: \"2em\" }} value=\"DOG\"> DOG </option>\r\n                                </select>\r\n                            </div>\r\n                            <div style={{ width: \"50%\", marginRight: \"25%\", marginLeft: \"25%\" }}>\r\n                                <p className=\"text-muted\"> {this.state.bidType === \"BNB\" ? this.state.balance + this.state.bidType : this.state.dogBalance + this.state.bidType} </p>\r\n                                <button disabled={this.state.isBid} onClick={this.bidAuction} className=\" btn btn-block\" style={{ backgroundColor: \"#7927ff\", color: \"#fff\", borderColor: \"#7927ff\" }}>Place Bid</button>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default itemCardDetail;","import React, { Component } from \"react\";\r\nimport Default_avatar from \"../Icons/avatardefault.png\";\r\nimport { FiShare2 } from \"react-icons/fi\";\r\nimport Modal from \"react-modal\";\r\nimport getWallet from \"../nfts/connectWallet\"\r\nimport axios from 'axios';\r\nimport ItemCard from './ItemCard';\r\nimport \"./My_Collection.css\";\r\nlet web3, self, account;\r\nclass my_Collection extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    bidData: [],\r\n    myCollection: \"myCollection_tabs myCollection_tabs_on\",\r\n    my_bids: \"myCollection_tabs\",\r\n    tab_myCollection: \"myCollection_tab_show\",\r\n    tab_my_bids: \"myCollection_tab_hide\",\r\n    modalState: true,\r\n    modalIsOpen: false,\r\n    selectedFile: null,\r\n    user: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    self = this;\r\n    self.loadDB();\r\n    if (window.ethereum)\r\n      window.ethereum.on('accountsChanged', async function (accounts) {\r\n        self.loadDB();\r\n      })\r\n  }\r\n\r\n  upload = async () => {\r\n    // this.setState({loadingText:\"Uploading NFT Image to Server...\"})\r\n    // this.openModal();\r\n\r\n    let formD = document.forms[\"userData\"];\r\n    let data = new FormData(formD);\r\n    data.append(\"account\", account[0])\r\n\r\n    let link = \"/save\";\r\n    try {\r\n      axios({\r\n        method: \"POST\",\r\n        url: link,\r\n        data: data,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n        ,\r\n        timeout: 3000,\r\n      })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            console.log(\"Success, firm added\")\r\n            this.closeModal();\r\n            localStorage.setItem(\"userData\", response.data);\r\n            this.setState({ user: response.data });\r\n            let profileImage = response.data.pic;\r\n            console.log(\"Profile Pic: \" + profileImage)\r\n          } else {\r\n            console.log(\"Error occurred\")\r\n          }\r\n        }\r\n        ).catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  loadDB = async function () {\r\n    let self = this;\r\n    try {\r\n      web3 = await getWallet();\r\n      account = await web3.eth.getAccounts();\r\n      const userNfts = axios.get(\"/nfts/user/\" + account[0]);\r\n      const userData = axios.get(\"/user/\" + account[0]);\r\n      const nfts = axios.get(\"/nfts\");\r\n      // you could also use destructuring to have an array of responses\r\n      await axios.all([userNfts, userData, nfts]).then(axios.spread(function (res1, res2, res3) {\r\n        console.log(res1.data);\r\n        self.setState({ data: res1.data });\r\n        console.log(res2.data);\r\n        if(!res2.data) self.openModal();\r\n        self.setState({ user: res2.data });\r\n        console.log(res3.data);\r\n        var bids;\r\n        res.data.forEach((nft) => {\r\n                  if (nft.auction)\r\n                    if (nft.auction.bids.find(e => e.account === account[0])) {\r\n                      bids.push(nft);\r\n                    }\r\n                })\r\n                self.setState({ bidData: bids });\r\n      }));\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      }\r\n    \r\n  customStyles = {\r\n      content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      },\r\n    };\r\n    openModal = () => {\r\n      this.setState({ modalIsOpen: true });\r\n    };\r\n\r\n    afterOpenModal = () => {\r\n      // references are now sync'd and can be accessed.\r\n      // subtitle.style.color = '#f00';\r\n    };\r\n\r\n    closeModal = () => {\r\n      this.setState({ modalIsOpen: false });\r\n    };\r\n\r\n    Handle_Show = () => {\r\n      this.setState({ modalState: false });\r\n    };\r\n\r\n    Active_myCollection = () => {\r\n      this.setState({ myCollection: \"myCollection_tabs myCollection_tabs_on\" });\r\n      this.setState({ my_bids: \"myCollection_tabs\" });\r\n      this.setState({ tab_myCollection: \"myCollection_tab_show\" });\r\n      this.setState({ tab_my_bids: \"myCollection_tab_hide\" });\r\n    };\r\n    Active_my_bids = () => {\r\n      this.setState({ myCollection: \"myCollection_tabs\" });\r\n      this.setState({ my_bids: \"myCollection_tabs myCollection_tabs_on\" });\r\n      this.setState({ tab_myCollection: \"myCollection_tab_hide\" });\r\n      this.setState({ tab_my_bids: \"myCollection_tab_show\" });\r\n    };\r\n\r\n    handleInput = async (e) => {\r\n      e.preventDefault()\r\n      const inputFile = e?.target?.files[0];\r\n      if (inputFile) {\r\n        const base64 = await this.toBase64(inputFile)\r\n        this.setState({ selectedFile: base64, previewText: \"\" })\r\n      }\r\n\r\n      // document.getElementById('inputfile').click()\r\n    }\r\n    toBase64 = file => new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n\r\n    render() {\r\n      return (\r\n        <div style={{ backgroundColor: \"#f5f5f5\" }}>\r\n          <div style={{ minHeight: \"120px\" }} className=\"myCollection_box py-1\">\r\n            <div className=\"d-flex flex-wrap align-items-center my-4\">\r\n              <div style={{ marginLeft: \"30px\" }}>\r\n                <span onClick={this.openModal} className=\"myCollection_ui_avatar\">\r\n                  <img\r\n                    className=\"myCollection_ui_avatar_icon\"\r\n                    src={!this.state.user.pic ? Default_avatar : \"http://\" + this.state.user.pic}\r\n                    alt=\"\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"btn mx-3 myCollection_share_btn\">\r\n                <FiShare2 className=\"mr-2\" />\r\n                <span>SHARE</span>\r\n              </div>\r\n            </div>\r\n            <div className></div>\r\n          </div>\r\n          <div className=\"myCollection_box\">\r\n            <span\r\n              className={this.state.myCollection}\r\n              onClick={this.Active_myCollection}\r\n            >\r\n              My Collection\r\n            </span>\r\n            <span className={this.state.my_bids} onClick={this.Active_my_bids}>\r\n              My Bids\r\n            </span>\r\n            <hr style={{ marginTop: \"25px\" }} />\r\n          </div>\r\n          <div className=\"myCollection_box\">\r\n            <div className={this.state.tab_myCollection}>\r\n              <div className=\"d-flex justify-content-end mt-4 pr-2\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"mr-3\">Sort:</span>\r\n                  <select\r\n                    class=\"form-select myCollection_sort_field\"\r\n                    aria-label=\"Sort\"\r\n                  >\r\n                    <option selected value=\"all\">\r\n                      All\r\n                    </option>\r\n                    <option value=\"available_for_sale\">Available for sale</option>\r\n                    <option value=\"most_liked\">Most Liked</option>\r\n                    <option value=\"cheapest\">Cheapest</option>\r\n                    <option value=\"highest_price\">Highest price</option>\r\n                    <option value=\"recently_added\">Recently added</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"pb-5\">\r\n                <div className=\"justify-content-center\">\r\n                  {this.state.data.length > 0 ?\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      {this.state.data.map((el, i) => {\r\n                        return (\r\n                          <div\r\n                            style={{ width: \"25%\" }}\r\n                          >\r\n                            <div\r\n                              className=\"ant-col\"\r\n                              style={{\r\n                                paddingLeft: 11,\r\n                                paddingRight: 11,\r\n                                flex: \"1 1 auto\",\r\n                              }}\r\n                            >\r\n\r\n                              <ItemCard\r\n                                nftData={el}\r\n                              />\r\n\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                    </div>\r\n                    : <div>You have not any NFT... </div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={this.state.tab_my_bids}>\r\n              <div className=\"d-flex justify-content-end mt-4 pr-2\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <span className=\"mr-3\">Sort:</span>\r\n                  <select\r\n                    class=\"form-select myCollection_sort_field\"\r\n                    aria-label=\"Sort\"\r\n                  >\r\n                    <option selected value=\"all\">\r\n                      All\r\n                    </option>\r\n                    <option value=\"available_for_sale\">Available for sale</option>\r\n                    <option value=\"most_liked\">Most Liked</option>\r\n                    <option value=\"cheapest\">Cheapest</option>\r\n                    <option value=\"highest_price\">Highest price</option>\r\n                    <option value=\"recently_added\">Recently added</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"pb-5\">\r\n                <div className=\"myCollection_list_main_prod justify-content-center\">\r\n                  {this.state.bidData.length > 0 ?\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      {this.state.bidData.map((el, i) => {\r\n\r\n                        return (\r\n\r\n                          <ItemCard\r\n                            nftData={el}\r\n                          />\r\n\r\n                        );\r\n                      })}\r\n\r\n                    </div>\r\n                    : <div>You don't bid on any NFT... </div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container\">\r\n            <Modal\r\n              isOpen={this.state.modalIsOpen}\r\n              onAfterOpen={this.afterOpenModal}\r\n              onRequestClose={this.closeModal}\r\n              style={this.customStyles}\r\n              contentLabel=\"Example Modal\"\r\n            >\r\n              <div class=\"content\">\r\n                <div>\r\n                  <button\r\n                    onClick={this.closeModal}\r\n                    type=\"button\"\r\n                    class=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    &times;\r\n                  </button>\r\n                </div>\r\n                <h4 style={{ textAlign: \"center\" }}> Welcome </h4>\r\n                <form className=\"form\" id=\"userData\" encType=\"multipart/form-data\">\r\n                  <div className=\"mt-4 text-center\">\r\n                    <label for=\"profile_pic\">\r\n                      <span className=\"myCollection_ui_avatar\">\r\n                        <img\r\n                          className=\"myCollection_ui_avatar_icon\"\r\n                          src={this.state.selectedFile?this.state.selectedFile:this.state.user.pic ?\"http://\"+this.state.user.pic: Default_avatar}\r\n                          alt=\"\"\r\n                        />\r\n                      </span>\r\n                      <div className=\"mt-1 text-center\">\r\n                        <span style={{ fontSize: \"80%\", fontWeight: \"400\" }}>\r\n                          {\" \"}\r\n                          Choose Profile Picture{\" \"}\r\n                        </span>\r\n                      </div>\r\n                    </label>\r\n                    <input onChange={this.handleInput} type=\"file\" id=\"profile_pic\" name=\"profile_pic\" style={{ display: 'none' }} />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"mt-3\">\r\n                      <h5 style={{ fontWeight: \"700\" }}> Display Name* </h5>\r\n                      <input\r\n                        id=\"user_name\"\r\n                        name=\"user_name\"\r\n                        className=\"form-control myCollection_model_form_control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your display name\"\r\n                        value={this.state.user.name}\r\n                      />\r\n                      <small style={{ color: \"#808080\" }}>\r\n                        {\" \"}\r\n                        Only use letters, numbers, underscores and emojis{\" \"}\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <h5 style={{ fontWeight: \"700\" }}> Bio </h5>\r\n                      <input\r\n                        id=\"user_bio\"\r\n                        name=\"user_bio\"\r\n                        className=\"form-control myCollection_model_form_control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Tell us a little about yourself\"\r\n                        value={this.state.user.bio}\r\n                      />\r\n                      <small style={{ color: \"#808080\" }}> URLs are allowed </small>\r\n                    </div>\r\n                    <div className=\"mt-3 text-center\">\r\n                      <span onClick={this.upload} class=\"btn myCollection_model_Next_btn\">Save</span>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default my_Collection;\r\n","import React, { Component } from 'react';\r\nimport bsc_logo from '../Icons/bsc-logo.svg';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport UpperBody from './UpperBody';\r\nimport ItemCard from './ItemCard';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass MarketPage extends Component {\r\n\r\n  state = {\r\n    data: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    let self = this;\r\n    this.loadDB();\r\n    if(window.etherem)\r\n    window.ethereum.on('accountsChanged', async function (accounts) {\r\n      self.loadDB()\r\n    })\r\n  }\r\n\r\n  loadDB = async function () {\r\n    try {\r\n      let link = \"/nfts\";\r\n      let res = await axios.get(link);\r\n      if (res.status === 200) {\r\n\r\n        this.setState({ data: res.data });\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <ul className=\"nav nav-tabs justify-content-center\" role=\"tablist\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav_link_tab_decoration nav-link active\" data-toggle=\"tab\" href=\"#all\">All</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav_link_tab_decoration nav-link\" data-toggle=\"tab\" href=\"#digitalArt\">Digital Art</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav_link_tab_decoration nav-link\" data-toggle=\"tab\" href=\"#gameItems\">Game Items</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav_link_tab_decoration nav-link\" data-toggle=\"tab\" href=\"#collectibles\">Collectibles</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav_link_tab_decoration nav-link\" data-toggle=\"tab\" href=\"#collectibles\">Art Tickets</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <div className=\"nav_link_tab_decoration nav-link\" data-toggle=\"tab\" href=\"#collectibles\"></div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/create\"}><label className=\"nav_link_tab_decoration nav-link\">Create</label></Link>\r\n          </li>\r\n        </ul>\r\n        <UpperBody />\r\n        <div className=\"tab-content\" style={{ backgroundColor: \"rgb(243, 244, 247)\" }}>\r\n          <div className=\"d-flex flex-wrap\">\r\n            {this.state.data.map((el, i) => {\r\n              return (\r\n                <div\r\n                  style={{ width: \"25%\" }}\r\n                >\r\n                  <div\r\n                    className=\"ant-col\"\r\n                    style={{\r\n                      paddingLeft: 11,\r\n                      paddingRight: 11,\r\n                      flex: \"1 1 auto\",\r\n                    }}\r\n                  >\r\n\r\n                    <ItemCard\r\n                      nftData = {el}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarketPage;","import React, { Component } from 'react';\r\nimport MarketPage from './components/MarketPage';\r\nclass Home extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <MarketPage />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home;","export default __webpack_public_path__ + \"static/media/twitter-icon.264368de.svg\";","export default __webpack_public_path__ + \"static/media/lin-icon.07a39750.svg\";","export default __webpack_public_path__ + \"static/media/discord.9a3b3c69.svg\";","import React, { Component } from 'react';\r\nimport art_logo from '../Icons/art_logo.png';\r\nimport Twitter from '../Icons/twitter-icon.svg';\r\nimport LinkIn from '../Icons/lin-icon.svg';\r\nimport Discord from '../Icons/discord.svg';\r\nclass Footer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div style = {{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"100%\", flexDirection: \"column\"}}>\r\n                <div style = {{backgroundColor: \"#7927ff\", display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <div style = {{width: \"842px\"}}>\r\n                        <div style = {{height: \"200px\", display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div style = {{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\"}}>\r\n                                <div style = {{display: \"flex\", alignItems: \"center\", marginBottom: \"18px\"}}>\r\n                                    <img src={art_logo} alt=\"\" width = \"100px\" />\r\n                                </div>\r\n                                <div style = {{color: \"#7927ff\", display: \"flex\"}}>\r\n                                    <a href=\"https://twitter.com/artnft_io\" style = {{marginRight: \"11px\", textDecorationLine: \"none\", color: \"#7927ff\", backgroundColor: \"transparent\"}}>\r\n                                        <img src={Twitter} alt=\"\" height = \"24px\" />\r\n                                    </a>\r\n                                    <a href=\"https://www.linkedin.com/company/artnft-io\" style = {{marginRight: \"11px\", textDecorationLine: \"none\", color: \"#7927ff\", backgroundColor: \"transparent\"}}>\r\n                                        <img src={LinkIn} alt=\"\" height = \"24px\" />\r\n                                    </a>\r\n                                    <a href=\"https://discord.gg/7Sn2nHC3Ep\" style = {{marginRight: \"11px\", textDecorationLine: \"none\", color: \"#7927ff\", backgroundColor: \"transparent\"}}>\r\n                                        <img src={Discord} alt=\"\" height = \"24px\" style = {{backgroundColor: \"#fff\", borderRadius: \"50%\", padding: \"3px\"}} />\r\n                                    </a>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div style = {{display: \"flex\", alignItems: \"center\"}}>\r\n                                <div style = {{display: \"flex\", flexDirection: \"column\", marginRight: \"75px\"}}>\r\n                                    <p style = {{fontSize: \"16px\", lineHeight: \"22px\", color: \"#fff\", marginBottom: \"10px\", fontWeight: \"700\"}}>Products</p>\r\n                                    <div style = {{fontSize: \"16px\", lineHeight: \"22px\", color: \"#fff\", marginBottom: \"10px\", textDecorationLine: \"none\"}}> NFT Tools </div>\r\n                                    <div  style = {{fontSize: \"16px\", lineHeight: \"22px\", color: \"#fff\", textDecorationLine: \"none\"}}> Art Wallet </div>\r\n                                </div>\r\n                                <div style = {{display: \"flex\", flexDirection: \"column\"}}>\r\n                                    <p style = {{fontSize: \"16px\", lineHeight: \"22px\", color: \"#fff\", marginBottom: \"10px\", fontWeight: \"700\"}}>Support</p>\r\n                                    <div  style = {{fontSize: \"16px\", lineHeight: \"22px\", color: \"#fff\", marginBottom: \"10px\", textDecorationLine: \"none\"}}>  FAQ  </div>\r\n                                    <div  style = {{fontSize: \"16px\", lineHeight: \"22px\", color: \"#fff\", textDecorationLine: \"none\"}}>  Contact Us  </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style = {{backgroundColor: \"#590dd7\", display: \"flex\", justifyContent: \"center\", width: \"100%\"}}>\r\n                    <div style = {{width: \"842px\"}}>\r\n                        <div style = {{height: \"72px\", width: \"100%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                            <div style = {{fontSize: \"14px\", lineHeight: \"19px\", color: \"#fff\"}}>© ArtNft — All rights reserved</div>\r\n                            <div>\r\n                                <div  style = {{marginRight: \"32px\", fontSize: \"14px\", lineHeight: \"19px\", color: \"#fff\", textDecorationLine: \"none\"}}> Privacy Policy </div>\r\n                                <div  style = {{marginRight: \"32px\", fontSize: \"14px\", lineHeight: \"19px\", color: \"#fff\", textDecorationLine: \"none\"}}> Terms of Use </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import MainPage from './creatForm/mainPage'\nimport React, {Component} from 'react';\nimport './App.css';\nimport NaveBar from './components/NavBar';\nimport Home from './Home';\nimport ItemCardDetail from './components/ItemCardDetail';\nimport MyCollections from './components/My_Collection';\nimport Footer from './components/Footer';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nclass App extends Component {\n  state = {\n };\n\n render () {\n  return ( \n    <BrowserRouter>\n     <NaveBar />\n        <Switch>\n          <Route path='/' component = {Home} exact/>\n          <Route path = '/nft/:id' component = {ItemCardDetail} />\n          <Route path = '/create' component = {MainPage} />\n          <Route path = '/collections' component = {MyCollections} />\n        </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"jquery/dist/jquery.js\"\nimport \"popper.js\"\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}